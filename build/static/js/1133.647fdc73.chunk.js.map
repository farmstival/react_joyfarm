{"version":3,"file":"static/js/1133.647fdc73.chunk.js","mappings":"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","sources":["commons/SubTitleLink.js","commons/components/Buttons.js","commons/components/LayoutBox.js","commons/components/Loading.js","commons/components/TitleBox.js","layouts/Header.js","member/containers/MemberOnlyContainer.js","reservation/apis/apiInfo.js","reservation/components/CompletionForm.js","reservation/containers/ReserveCompletionContainer.js","reservation/pages/Completion.js","styles/color.js","styles/fontSize.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport CommonContext from './modules/CommonContext';\r\n\r\nconst SubTitleLink = ({ text, href }) => {\r\n  const {\r\n    actions: { setLinkText, setLinkHref },\r\n  } = useContext(CommonContext);\r\n\r\n  useEffect(() => {\r\n    setLinkText(text);\r\n    setLinkHref(href);\r\n  }, [setLinkText, setLinkHref, text, href]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default React.memo(SubTitleLink);\r\n","import styled, { css } from 'styled-components';\r\nimport { buttonColor } from '../../styles/color';\r\nimport fontSize from '../../styles/fontSize';\r\nimport { color } from '../../styles/color';\r\n\r\nconst { big, medium, normal } = fontSize;\r\n\r\nconst commonStyle = css`\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst { midGreen, white } = color;\r\n\r\nexport const SmallButton = styled.button`\r\n  font-size: ${normal};\r\n  height: 30px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n\r\n  ${({ width }) => css`\r\n    width: ${width && '100px'};\r\n  `}\r\n`;\r\n\r\nexport const MidButton = styled.button`\r\n  font-size: ${medium};\r\n  height: 40px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const BigButton = styled.button`\r\n  font-size: ${big};\r\n  height: 45px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  width: ${({ width }) => (width ? `${width}px` : '100%')};\r\n  margin: 20px auto;\r\n\r\n  button {\r\n    width: 0;\r\n    flex-grow: 1;\r\n  }\r\n\r\n  button + button {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport const ZzimButton = styled.div`\r\n  font-size: 1.3em;\r\n  font-weight: 700;\r\n  width: 200px;\r\n  height: 50px;\r\n  background-color: ${midGreen};\r\n  color: ${white};\r\n  border-radius: 5px;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nexport const BoardButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: ${medium};\r\n  font-weight: 600px;\r\n  cursor: pointer;\r\n  width: 100px;\r\n  height: 35px;\r\n  background-color: ${midGreen};\r\n  border-radius: 5px;\r\n  color: white;\r\n  a {\r\n    color: white;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { color } from '../../styles/color';\r\nexport const OuterBox = styled.div`\r\n  margin-bottom: 150px;\r\n`;\r\n\r\nexport const PageNavWrap = styled.div`\r\n  // box-sizing: border-box;\r\n  // padding: 48px 20px 20px 48px;\r\n  // border-bottom: solid 1.5px rgb(221, 221, 221);\r\n  // max-width: 1300px;\r\n  // position: relative;\r\n  // margin: 0 auto 20px;\r\n\r\n  //이 부분은 정렬을 위해 추가\r\n  box-sizing: border-box;\r\n  padding: 48px 20px 20px;\r\n  border-bottom: solid 1.5px rgb(221, 221, 221);\r\n  max-width: 1300px;\r\n  position: relative;\r\n  margin: 0 auto 20px;\r\n`;\r\n\r\nexport const PageNav = styled.div`\r\n  line-height: normal;\r\n\r\n  padding-left: 20px; //이 부분은 정렬을 위해 추가\r\n`;\r\n\r\nexport const PageTitle = styled.div`\r\n  margin-top: 20px;\r\n  font-size: 20px;\r\n\r\n  padding-left: 20px;\r\n`;\r\n\r\nexport const ContentBox = styled.div`\r\n  box-sizing: border-box;\r\n  width: 1300px;\r\n  min-height: 700px;\r\n  padding: 0 20px 50px 20px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const ContentBox2 = styled.div`\r\n  box-sizing: border-box;\r\n  width: 1300px;\r\n  min-height: 700px;\r\n  padding: 0 0 50px 0;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const ContentBox3 = styled.div`\r\n  box-sizing: border-box;\r\n  width: 800px;\r\n  min-height: 700px;\r\n  padding: 10px 0 30px 0;\r\n  margin: 0 auto;\r\n`;\r\n","import React from 'react';\r\nimport image from '../../images/loading.gif';\r\nimport image2 from '../../images/logo.png';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 100;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: auto;\r\n\r\n  .loading2 {\r\n    width: 130px;\r\n    height: 23px;\r\n    margin: 150px 0 10px 0;\r\n    opacity: 0.3;\r\n  }\r\n\r\n  img {\r\n    width: 60px;\r\n    height: 20px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Wrapper>\r\n      <img className=\"loading2\" src={image2} alt=\"loading2\" />\r\n      <img src={image} alt=\"loading\" />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(Loading);\r\n","import styled from 'styled-components';\r\nimport fontSize from '../../styles/fontSize';\r\n\r\nconst { extraBig, big, medium } = fontSize;\r\n\r\nexport const MainTitle = styled.h1`\r\n  font-size: ${extraBig};\r\n  text-align: center;\r\n  border-bottom: 2px solid #000;\r\n  padding: 0 15px 15px;\r\n  margin: 0 0 20px;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const MainTitle2 = styled.h1`\r\n  font-size: ${big};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  border-bottom: 2px solid #000;\r\n  padding: 0 15px 15px;\r\n  margin: 30px 0 20px;\r\n  line-height: 1;\r\n\r\n  svg{\r\n    color: green;\r\n  }\r\n`;\r\n\r\nexport const MainTitle3 = styled.h1`\r\n  font-size: ${extraBig};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  border-bottom: 2px solid #000;\r\n  margin-bottom: -10px;\r\n  line-height: 1;\r\n\r\n  svg{\r\n    color: green;\r\n  }\r\n`;\r\n\r\nexport const SubTitle = styled.h1`\r\n  font-size: ${big};\r\n  border-bottom: 2px solid #000;\r\n  padding: 0 15px 15px;\r\n  margin: 0 0 20px;\r\n  line-height: 1;\r\n  text-align: center;\r\n`;\r\n\r\nexport const MidTitle = styled.h1`\r\n  font-size: ${medium};\r\n  border-bottom: 2px solid #000;\r\n  padding: 0 15px 15px;\r\n  margin: 0 0 20px;\r\n  line-height: 1;\r\n  text-align: center;\r\n`;\r\n\r\n\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { PageNavWrap, PageTitle } from '../commons/components/LayoutBox';\r\nimport { IoMdHome } from 'react-icons/io';\r\nimport RecommendContext from '../commons/modules/CommonContext';\r\n\r\nconst HeaderBox = styled.header`\r\n  /* 헤더 스타일 */\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  font-size: 1.3em;\r\n  color: #000; /* 링크 색상 설정 */\r\n  text-decoration: none; /* 밑줄 제거 */\r\n  &:hover {\r\n    color: #007bff; /* 호버 시 색상 변경 */\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  const {\r\n    states: { linkHref, linkText },\r\n  } = useContext(RecommendContext);\r\n  /*\r\n  const location = useLocation();\r\n\r\n  // 현재 페이지 URL경로\r\n  const currentPath = location.pathname;\r\n\r\n  let linkText = '';\r\n  let linkHref = '#';\r\n  let pattern = new RegExp('/d+$');\r\n\r\n  if (currentPath === '/recommend/tour' || currentPath.concat(pattern)) {\r\n    linkText = '추천 여행지';\r\n    linkHref = '/recommend/tour';\r\n  } else if (\r\n    currentPath === '/recommend/festival' ||\r\n    currentPath.concat(pattern)\r\n  ) {\r\n    linkText = '지역별 축제 정보';\r\n    linkHref = '/recommend/festival';\r\n  } else if (currentPath === '/recommend/mylocation') {\r\n    linkText = '내 위치 주변 농촌 체험';\r\n    linkHref = '/recommend/mylocation';\r\n  } else {\r\n    linkText = 'HOME';\r\n    linkHref = '/';\r\n  }\r\n  */\r\n\r\n  return (\r\n    <HeaderBox>\r\n      <PageNavWrap>\r\n        <StyledLink href=\"/\">\r\n          <IoMdHome /> HOME\r\n        </StyledLink>\r\n        &nbsp;&nbsp; &gt; &nbsp;&nbsp;\r\n        <StyledLink href={linkHref}>{linkText}</StyledLink>\r\n        <PageTitle>\r\n          <h1>{linkText}</h1>\r\n        </PageTitle>\r\n      </PageNavWrap>\r\n    </HeaderBox>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport UserInfoContext from '../modules/UserInfoContext';\r\nimport loadable from '@loadable/component';\r\n\r\nconst LoginPage = loadable(() => import('../pages/Login'));\r\n\r\nconst MemberOnlyContainer = ({ children }) => {\r\n  const {\r\n    states: { isLogin },\r\n  } = useContext(UserInfoContext);\r\n\r\n  const [searchParams] = useSearchParams();\r\n  if (!isLogin && !searchParams.get('redirectUrl')) {\r\n    searchParams.append('redirectUrl', window.location.href);\r\n  }\r\n\r\n  return isLogin ? children : <LoginPage />;\r\n};\r\n\r\nexport default React.memo(MemberOnlyContainer);","import requestData from '../../commons/libs/requestData';\r\n\r\n//목록 조회\r\nexport const apiList = (search) => {\r\n  search = search ?? {};\r\n\r\n  const qs = [];\r\n\r\n  for (const [k, v] of Object.entries(search)) {\r\n    qs.push(`${k}=${v}`);\r\n  }\r\n\r\n  let url = '/reservation/list';\r\n  if (qs.length > 0) url += `?${qs.join('&')}`; //검색 조건이 있을 때\r\n\r\n  return requestData(url);\r\n};\r\n\r\n// 상세 조회\r\nexport const apiGet = (seq) => requestData(`/reservation/info/${seq}`);\r\n\r\n// 예약된 상세조회\r\nexport const myApiGet = (seq) => requestData(`/reservation/complete/${seq}`);\r\n\r\n// 찜한 목록 조회\r\nexport const apiWishlist = (page = 1, limit = 8) => {\r\n  return requestData(`/reservation/wish?page=${page}&limit=${limit}`);\r\n};\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  SmallButton,\r\n  MidButton,\r\n  BigButton,\r\n} from '../../commons/components/Buttons';\r\nimport { format } from 'date-fns';\r\nimport fontSize from '../../styles/fontSize';\r\nimport { color } from '../../styles/color';\r\nimport { TiInfoLarge } from 'react-icons/ti';\r\n\r\nconst { large } = fontSize;\r\n\r\nconst FlatWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  margin-top: 50px;\r\n  padding: 20px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 20px;\r\n  font-weight: bolder;\r\n\r\n  .completion_message {\r\n    font-size: ${large};\r\n    // color: ${color.danger};\r\n    color: #4caf50;\r\n    font-weight: lighter;\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .btn_group {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n\r\n    .rsv_but {\r\n      display: flex;\r\n      margin: 0 20px;\r\n      justify-content: center;\r\n      align-items: center;\r\n      border: 1px solid #e0e0e0;\r\n      border-radius: 6px;\r\n      width: 30%;\r\n    }\r\n    .btn_right {\r\n      display: flex;\r\n      margin-left: 50px;\r\n      justify-content: center;\r\n      align-items: center;\r\n      border: 1px solid #e0e0e0;\r\n      border-radius: 6px;\r\n      width: 20%;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    // color: ${color.danger};\r\n    color: #4caf50;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .info_section {\r\n    margin-bottom: 20px;\r\n    padding-bottom: 20px;\r\n    border-bottom: 1px solid #e0e0e0;\r\n    justify-content: flex-start;\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n\r\n    dl {\r\n      margin-top: 20px;\r\n      dt {\r\n        color: ${color.success};\r\n      }\r\n      dd {\r\n        margin-top: 3px;\r\n        white-space: normal;\r\n        word-wrap: break-word;\r\n        word-break: keep-all;\r\n        line-height: 20px;\r\n        font-weight: lighter;\r\n      }\r\n    }\r\n  }\r\n\r\n  .toggle_btn {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .toggle_btn button {\r\n    background: #e2f7dd;\r\n    border: 1px solid #ccc;\r\n    border-radius: 100px;\r\n    width: 300px;\r\n    padding: 5px 10px;\r\n    cursor: pointer;\r\n    font-weight: bolder;\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n  }\r\n  .arrow {\r\n    background: white;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 40px;\r\n    align-content: center;\r\n    position: absolute;\r\n    right: 5px;\r\n\r\n    svg {\r\n      height: 20px;\r\n      width: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CancelForm = ({ data }) => {\r\n  const { t } = useTranslation();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const formatMobile = (mobile) => {\r\n    if (mobile.length === 11) {\r\n      return mobile.replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3');\r\n    }\r\n    return mobile; // 만약 전화번호가 11자리가 아닌 경우, 원래 문자열을 그대로 반환\r\n  };\r\n\r\n  const toggleInfo = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const {\r\n    name,\r\n    email,\r\n    mobile,\r\n    rdate,\r\n    ampm,\r\n    townName,\r\n    persons,\r\n    activityName,\r\n    ownerName,\r\n    doroAddress,\r\n    ownerTel,\r\n  } = data;\r\n\r\n  const formatDate = format(new Date(rdate), 'yyyy-MM-dd');\r\n\r\n  return (\r\n    <FlatWrapper>\r\n      <div className=\"completion_message\">\r\n        {t('예약이 성공적으로 완료되었습니다!')}\r\n      </div>\r\n      <h2>{t('예약 완료')}</h2>\r\n      <div className=\"info_section\">\r\n        <p>\r\n          {t('예약자명')} : {name}\r\n        </p>\r\n        <p>\r\n          {t('이메일')} : {email}\r\n        </p>\r\n        <p>\r\n          {t('전화번호')} : {formatMobile(mobile)}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"info_section\">\r\n        <p>\r\n          {t('예약일')} : {formatDate}\r\n        </p>\r\n        <p>\r\n          {t('예약시간')} : {ampm === 'AM' ? t('오전') : t('오후')}\r\n        </p>\r\n        <p>\r\n          {t('인원수')} : {persons} {t('명')}\r\n        </p>\r\n        <p>\r\n          {t('체험 마을')} : {townName}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"toggle\">\r\n        <div className=\"toggle_btn\">\r\n          <SmallButton onClick={toggleInfo}>\r\n            {isOpen\r\n              ? t('체험_마을_세부정보_닫기')\r\n              : t('체험_마을_세부정보_열기')}\r\n            <div className=\"arrow\">\r\n              <TiInfoLarge />\r\n            </div>\r\n          </SmallButton>\r\n          {isOpen && (\r\n            <div className=\"info_section\">\r\n              <dl>\r\n                <dt>{t('체험_활동_소개')}</dt>\r\n                <dd>: {activityName}</dd>\r\n              </dl>\r\n              <dl>\r\n                <dt>{t('체험_마을_대표자명')}</dt>\r\n                <dd>: {ownerName}</dd>\r\n              </dl>\r\n              <dl>\r\n                <dt>{t('체험_마을_주소')}</dt>\r\n                <dd>: {doroAddress}</dd>\r\n              </dl>\r\n              <dl>\r\n                <dt>{t('체험_마을_전화번호')}</dt>\r\n                <dd>: {ownerTel}</dd>\r\n              </dl>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"btn_group\">\r\n        <MidButton\r\n          className=\"rsv_but\"\r\n          color=\"midGreen\"\r\n          as={Link}\r\n          to=\"/myreservation/list\"\r\n        >\r\n          {t('나의 예약 현황')}\r\n        </MidButton>\r\n        <MidButton\r\n          className=\"rsv_but\"\r\n          color=\"midGreen\"\r\n          as={Link}\r\n          to=\"/reservation/list\"\r\n        >\r\n          {t('농촌체험_예약')}\r\n        </MidButton>\r\n      </div>\r\n    </FlatWrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(CancelForm);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { myApiGet } from '../apis/apiInfo'; // 예약된 상세조회로 끌고옴\r\nimport Loading from '../../commons/components/Loading';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CompletionForm from '../components/CompletionForm';\r\n\r\nconst ReserveCompletionContainer = ({ setPageTitle, setMainTitle }) => {\r\n  const [data, setData] = useState(null);\r\n  const { seq } = useParams();\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await myApiGet(seq);\r\n        setData(res);\r\n        setMainTitle(\r\n          `${res.name} ${t('님의_')} ${res.townName} ${t('예약_확인')}`,\r\n        );\r\n        setPageTitle(`${res.townName} ${t('예약_확인')}`);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    })();\r\n  }, [seq, setMainTitle, setPageTitle, t]); //변화감지 값 넣어주기\r\n\r\n  if (!data) {\r\n    return <Loading />;\r\n  }\r\n  console.log(data);\r\n\r\n  return (\r\n    <>\r\n      <CompletionForm data={data} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ReserveCompletionContainer);\r\n","import React from 'react';\r\nimport MemberOnlyContainer from '../../member/containers/MemberOnlyContainer';\r\nimport ReserveCompletionContainer from '../containers/ReserveCompletionContainer';\r\nimport { OuterBox, ContentBox } from '../../commons/components/LayoutBox';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useTranslation } from 'react-i18next';\r\nimport SubTitleLink from '../../commons/SubTitleLink';\r\nimport Header from '../../layouts/Header';\r\nimport { SubTitle } from '../../commons/components/TitleBox';\r\n\r\nconst Completion = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <>\r\n      <MemberOnlyContainer>\r\n        <SubTitleLink text={t('체험활동_조회')} href=\"/reservation/list\" />\r\n        <Helmet>\r\n          <title>{t('농촌체험_예약')}</title>\r\n        </Helmet>\r\n        <OuterBox>\r\n          <Header />\r\n          <ContentBox>\r\n            {/* <SubTitle>{t('체험활동_리스트')}</SubTitle> */}\r\n            <ReserveCompletionContainer />\r\n          </ContentBox>\r\n        </OuterBox>\r\n      </MemberOnlyContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Completion);\r\n","export const color = {\r\n  blue: '#6CC0FF',\r\n  primary: '#007bff',\r\n  secondary: '#6c757d',\r\n  success: '#28a745',\r\n  danger: '#dc3545',\r\n  warning: '#ffc107',\r\n  info: '#17a2b8',\r\n  light: '#E2E2E2',\r\n  dark: '#343a40',\r\n  black: '#000',\r\n  darkGreen: '#428C4C',\r\n  midGreen: '#39AE48',\r\n  lightGreen: '#C2F2B6',\r\n  white: '#ffffff',\r\n  dark_gray: '#333333',\r\n  mid_gray: '#767676',\r\n  line_gray: '#D5D5D5',\r\n  whiteGreen: '#FFFFDE',\r\n  whiteGray: '#cccccc',\r\n  gray: '#ccc',\r\n};\r\n\r\nexport const buttonColor = {\r\n  primary: [color.primary, '#fff', color.primary],\r\n  secondary: [color.secondary, '#fff', color.secondary],\r\n  success: [color.success, '#fff', color.success],\r\n  danger: [color.danger, '#fff', color.danger],\r\n  warning: [color.warning, '#212529', '#212529'],\r\n  info: [color.info, '#fff', color.info],\r\n  light: [color.light, '#212529', '#212529'],\r\n  dark: [color.dark, '#fff', color.dark],\r\n  darkGreen: [color.darkGreen, '#fff', color.darkGreen],\r\n  midGreen: [color.midGreen, '#fff', color.midGreen],\r\n  lightGreen: [color.lightGreen, '#fff', color.lightGreen],\r\n};\r\n","const fontSize = {\r\n  small: '0.75rem',\r\n  normal: '1rem',\r\n  normedium: '1.2rem',\r\n  medium: '1.25rem',\r\n  big: '1.5rem',\r\n  extraBig: '2rem',\r\n};\r\n\r\nexport default fontSize;\r\n"],"names":["SubTitleLink","_ref","text","href","actions","setLinkText","setLinkHref","useContext","CommonContext","useEffect","_jsx","_Fragment","React","big","medium","normal","fontSize","commonStyle","css","_templateObject","_taggedTemplateLiteral","midGreen","white","color","SmallButton","styled","button","_templateObject2","buttonColor","_templateObject3","_ref2","width","_templateObject4","MidButton","_templateObject5","_ref3","_templateObject6","BigButton","_templateObject7","_ref4","_templateObject8","ButtonGroup","div","_templateObject9","_ref5","concat","BoardButton","_templateObject10","_templateObject11","OuterBox","PageNavWrap","PageTitle","ContentBox","ContentBox2","ContentBox3","Wrapper","Loading","_jsxs","children","className","src","image2","alt","image","extraBig","MainTitle","h1","MainTitle2","MainTitle3","HeaderBox","header","StyledLink","a","Header","states","linkHref","linkText","RecommendContext","IoMdHome","LoginPage","loadable","MemberOnlyContainer","isLogin","UserInfoContext","searchParams","useSearchParams","get","append","window","location","apiList","search","_search","qs","k","v","Object","entries","push","url","length","join","requestData","apiGet","seq","myApiGet","apiWishlist","page","arguments","undefined","limit","large","FlatWrapper","danger","success","CancelForm","data","t","useTranslation","isOpen","setIsOpen","useState","name","email","mobile","rdate","ampm","townName","persons","activityName","ownerName","doroAddress","ownerTel","formatDate","format","Date","replace","formatMobile","onClick","toggleInfo","TiInfoLarge","as","Link","to","ReserveCompletionContainer","setPageTitle","setMainTitle","setData","useParams","res","err","console","error","log","CompletionForm","Completion","Helmet","blue","primary","secondary","warning","info","light","dark","black","darkGreen","lightGreen","dark_gray","mid_gray","line_gray","whiteGreen","whiteGray","gray","small","normedium"],"sourceRoot":""}