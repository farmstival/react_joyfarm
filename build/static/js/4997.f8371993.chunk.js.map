{"version":3,"file":"static/js/4997.f8371993.chunk.js","mappings":"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","sources":["commons/components/Buttons.js","commons/components/FileUpload.js","commons/components/MessageBox.js","member/containers/MemberOnlyContainer.js","commons/components/ProfileImage.js","mypage/pages/MypageMain.js","styles/color.js","styles/fontSize.js"],"sourcesContent":["import styled, { css } from 'styled-components';\r\nimport { buttonColor } from '../../styles/color';\r\nimport fontSize from '../../styles/fontSize';\r\nimport { color } from '../../styles/color';\r\n\r\nconst { big, medium, normal } = fontSize;\r\n\r\nconst commonStyle = css`\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst { midGreen, white } = color;\r\n\r\nexport const SmallButton = styled.button`\r\n  font-size: ${normal};\r\n  height: 30px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n\r\n  ${({ width }) => css`\r\n    width: ${width && '100px'};\r\n  `}\r\n`;\r\n\r\nexport const MidButton = styled.button`\r\n  font-size: ${medium};\r\n  height: 40px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const BigButton = styled.button`\r\n  font-size: ${big};\r\n  height: 45px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  width: ${({ width }) => (width ? `${width}px` : '100%')};\r\n  margin: 20px auto;\r\n\r\n  button {\r\n    width: 0;\r\n    flex-grow: 1;\r\n  }\r\n\r\n  button + button {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport const ZzimButton = styled.div`\r\n  font-size: 1.3em;\r\n  font-weight: 700;\r\n  width: 200px;\r\n  height: 50px;\r\n  background-color: ${midGreen};\r\n  color: ${white};\r\n  border-radius: 5px;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nexport const BoardButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: ${medium};\r\n  font-weight: 600px;\r\n  cursor: pointer;\r\n  width: 100px;\r\n  height: 35px;\r\n  background-color: ${midGreen};\r\n  border-radius: 5px;\r\n  color: white;\r\n  a {\r\n    color: white;\r\n  }\r\n`;\r\n","import React, { useCallback, useState } from 'react';\r\nimport apiRequest from '../libs/apiRequest';\r\nimport { SmallButton } from './Buttons';\r\nimport MessageBox from './MessageBox';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst FileUpload = ({\r\n  children,\r\n  gid,\r\n  location,\r\n  color,\r\n  imageOnly,\r\n  single,\r\n  done,\r\n  callback,\r\n  width,\r\n  imageUrl,\r\n}) => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 버튼 클릭 처리\r\n  const onButtonClick = useCallback(() => {\r\n    const fileEl = document.createElement('input');\r\n    fileEl.type = 'file';\r\n    fileEl.multiple = !Boolean(single);\r\n    fileEl.click();\r\n\r\n    const fileListener = (e) => {\r\n      const files = e.target.files;\r\n      try {\r\n        if (files.length === 0) {\r\n          throw new Error(t('파일을_선택하세요.'));\r\n        }\r\n\r\n        if (imageOnly) {\r\n          for (const file of files) {\r\n            if (!file.type.includes('image/')) {\r\n              throw new Error(t('이미지_형식의_파일만_업로드하세요.'));\r\n            }\r\n          }\r\n        }\r\n\r\n        if (!gid?.trim()) {\r\n          throw new Error(t('필수항목(gid)_누락'));\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('gid', gid.trim());\r\n        if (location) formData.append('location', location);\r\n\r\n        for (const file of files) {\r\n          formData.append('file', file);\r\n        }\r\n\r\n        if (single) {\r\n          formData.append('single', Boolean(single));\r\n        }\r\n\r\n        if (imageOnly) {\r\n          formData.append('imageOnly', Boolean(imageOnly));\r\n        }\r\n\r\n        if (done) {\r\n          formData.append('done', Boolean(done));\r\n        }\r\n\r\n        (async () => {\r\n          try {\r\n            const res = await apiRequest('/file/upload', 'POST', formData);\r\n            if (res.status === 201 && res.data.success) {\r\n              // 파일 업로드 후속 처리\r\n              if (typeof callback === 'function') {\r\n                callback(res.data.data);\r\n              }\r\n              // 성공시 처리\r\n              return;\r\n            }\r\n\r\n            if (res.data.message) setMessage(res.data.message);\r\n          } catch (err) {\r\n            setMessage(err.message);\r\n            console.error(err);\r\n          }\r\n        })();\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n      }\r\n    };\r\n\r\n    fileEl.removeEventListener('change', fileListener);\r\n\r\n    fileEl.addEventListener('change', fileListener);\r\n  }, [single, gid, location, imageOnly, t, callback, done]);\r\n\r\n  return (\r\n    <>\r\n      {imageUrl ? (\r\n        <img\r\n          src={imageUrl}\r\n          width={width}\r\n          alt=\"profile\"\r\n          onClick={onButtonClick}\r\n        />\r\n      ) : (\r\n        <SmallButton\r\n          width={width}\r\n          type=\"button\"\r\n          color={color}\r\n          onClick={onButtonClick}\r\n        >\r\n          {children}\r\n        </SmallButton>\r\n      )}\r\n      {message && <MessageBox color=\"danger\">{message}</MessageBox>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(FileUpload);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { color } from '../../styles/color';\r\nimport fontSize from '../../styles/fontSize';\r\n\r\nconst { normedium } = fontSize;\r\nconst { dark, danger } = color;\r\n\r\nconst Box = styled.div`\r\n  text-align: left;\r\n  padding: 10px;\r\n  font-size: ${normedium};\r\n  border-radius: 3px;\r\n  color: ${dark};\r\n\r\n  ${({ color: c }) =>\r\n    c &&\r\n    css`\r\n      color: ${danger};\r\n    `}\r\n`;\r\n\r\nconst MessageBox = ({ messages, color, children, index = 0 }) => {\r\n  // messages 배열이 정의되지 않았을 경우 빈 배열로 초기화\r\n  messages = messages || [];\r\n\r\n  // children이 있으면 messages 배열에 추가\r\n  if (children) messages.push(children);\r\n\r\n  // 인덱스를 통해 특정 메시지만 사용\r\n  const message = messages[index];\r\n\r\n  return message ? (\r\n    <Box color={color}>\r\n      {message}\r\n    </Box>\r\n  ) : null;\r\n};\r\n\r\nexport default React.memo(MessageBox);\r\n","import React, { useContext } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport UserInfoContext from '../modules/UserInfoContext';\r\nimport loadable from '@loadable/component';\r\n\r\nconst LoginPage = loadable(() => import('../pages/Login'));\r\n\r\nconst MemberOnlyContainer = ({ children }) => {\r\n  const {\r\n    states: { isLogin },\r\n  } = useContext(UserInfoContext);\r\n\r\n  const [searchParams] = useSearchParams();\r\n  if (!isLogin && !searchParams.get('redirectUrl')) {\r\n    searchParams.append('redirectUrl', window.location.href);\r\n  }\r\n\r\n  return isLogin ? children : <LoginPage />;\r\n};\r\n\r\nexport default React.memo(MemberOnlyContainer);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport FileUpload from '../../commons/components/FileUpload';\r\nimport NoProfile from '../../images/myprofile.png';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  margin: auto;\r\n`;\r\n\r\nconst ProfileImage = ({ gid, profileImage, fileUploadCallback, className }) => {\r\n  return (\r\n    <Wrapper className={className}>\r\n      <FileUpload\r\n        width={150}\r\n        imageUrl={profileImage ?? NoProfile}\r\n        gid={gid}\r\n        imageOnly={true}\r\n        single={true}\r\n        done={true} // false 로 바꾸면 수정하기 눌러야 프로필이미지 수정됨!\r\n        callback={fileUploadCallback}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProfileImage);\r\n","import React, { useContext } from 'react';\r\nimport MemberOnlyContainer from '../../member/containers/MemberOnlyContainer';\r\nimport UserInfoContext from '../../member/modules/UserInfoContext';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport styled from 'styled-components';\r\nimport { color } from '../../styles/color';\r\nimport ProfileImage from '../../commons/components/ProfileImage';\r\n\r\nconst { whiteGreen, mid_gray } = color;\r\n\r\nconst StyledMain = styled.div`\r\n  width: 700px;\r\n  height: 400px;\r\n  margin: 50px auto 0;\r\n  padding: 20px 0;\r\n  background: ${whiteGreen};\r\n  text-align: center;\r\n  font-size: 1.8rem;\r\n  border: 4px solid ${mid_gray};\r\n  border-radius: 5px;\r\n  box-shadow: 2px 2px 2px 3px #d6d6d6;\r\n\r\n  .icon {\r\n    margin-top: 20px;\r\n    font-size: 5rem;\r\n  }\r\n\r\n  .proimg {\r\n    width: 200px;\r\n    margin-top: 20px;\r\n    \r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: contain; // cover: 이미지를 컴포넌트에 맞게 잘라냄\r\n                       // contain: 이미지를 컴포넌트 크기에 맞춰 축소\r\n    border-radius: 20%; // 동그란 프사를 원하면 추가\r\n  }\r\n\r\n`;\r\n\r\nconst StyledProfileImage = styled(ProfileImage)`\r\n  margin-top: 20px;\r\n  pointer-events: none;\r\n  \r\n`;\r\n\r\nconst MyPageMain = () => {\r\n  const {\r\n    states: { userInfo },\r\n  } = useContext(UserInfoContext);\r\n  const { t } = useTranslation();\r\n  const profileImageUrl = userInfo?.profileImage?.fileUrl;\r\n\r\n  return (\r\n    <MemberOnlyContainer>\r\n      <Helmet>\r\n        <title>{t('마이페이지')}</title>\r\n      </Helmet>\r\n      <StyledMain>\r\n        <h1>{t('마이페이지')}</h1>\r\n        {userInfo?.userName}({userInfo?.email}) 님 환영합니다.\r\n        <StyledProfileImage\r\n          gid={userInfo?.gid}\r\n          profileImage={profileImageUrl}\r\n          fileUploadCallback={null}\r\n        />\r\n      </StyledMain>\r\n    </MemberOnlyContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(MyPageMain);\r\n","export const color = {\r\n  blue: '#6CC0FF',\r\n  primary: '#007bff',\r\n  secondary: '#6c757d',\r\n  success: '#28a745',\r\n  danger: '#dc3545',\r\n  warning: '#ffc107',\r\n  info: '#17a2b8',\r\n  light: '#E2E2E2',\r\n  dark: '#343a40',\r\n  black: '#000',\r\n  darkGreen: '#428C4C',\r\n  midGreen: '#39AE48',\r\n  lightGreen: '#C2F2B6',\r\n  white: '#ffffff',\r\n  dark_gray: '#333333',\r\n  mid_gray: '#767676',\r\n  line_gray: '#D5D5D5',\r\n  whiteGreen: '#FFFFDE',\r\n  whiteGray: '#cccccc',\r\n  gray: '#ccc',\r\n};\r\n\r\nexport const buttonColor = {\r\n  primary: [color.primary, '#fff', color.primary],\r\n  secondary: [color.secondary, '#fff', color.secondary],\r\n  success: [color.success, '#fff', color.success],\r\n  danger: [color.danger, '#fff', color.danger],\r\n  warning: [color.warning, '#212529', '#212529'],\r\n  info: [color.info, '#fff', color.info],\r\n  light: [color.light, '#212529', '#212529'],\r\n  dark: [color.dark, '#fff', color.dark],\r\n  darkGreen: [color.darkGreen, '#fff', color.darkGreen],\r\n  midGreen: [color.midGreen, '#fff', color.midGreen],\r\n  lightGreen: [color.lightGreen, '#fff', color.lightGreen],\r\n};\r\n","const fontSize = {\r\n  small: '0.75rem',\r\n  normal: '1rem',\r\n  normedium: '1.2rem',\r\n  medium: '1.25rem',\r\n  big: '1.5rem',\r\n  extraBig: '2rem',\r\n};\r\n\r\nexport default fontSize;\r\n"],"names":["big","medium","normal","fontSize","commonStyle","css","_templateObject","_taggedTemplateLiteral","midGreen","white","color","SmallButton","styled","button","_templateObject2","_ref","buttonColor","_templateObject3","_ref2","width","_templateObject4","MidButton","_templateObject5","_ref3","_templateObject6","BigButton","_templateObject7","_ref4","_templateObject8","ButtonGroup","div","_templateObject9","_ref5","concat","BoardButton","_templateObject10","_templateObject11","FileUpload","children","gid","location","imageOnly","single","done","callback","imageUrl","message","setMessage","useState","t","useTranslation","onButtonClick","useCallback","fileEl","document","createElement","type","multiple","Boolean","click","fileListener","e","files","target","length","Error","file","includes","trim","formData","FormData","append","res","apiRequest","status","data","success","err","console","error","removeEventListener","addEventListener","_jsxs","_Fragment","_jsx","src","alt","onClick","MessageBox","React","normedium","dark","danger","Box","c","messages","index","push","LoginPage","loadable","MemberOnlyContainer","states","isLogin","useContext","UserInfoContext","searchParams","useSearchParams","get","window","href","Wrapper","ProfileImage","profileImage","fileUploadCallback","className","NoProfile","whiteGreen","mid_gray","StyledMain","StyledProfileImage","MyPageMain","_userInfo$profileImag","userInfo","profileImageUrl","fileUrl","Helmet","userName","email","blue","primary","secondary","warning","info","light","black","darkGreen","lightGreen","dark_gray","line_gray","whiteGray","gray","small","extraBig"],"sourceRoot":""}