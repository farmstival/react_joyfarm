{"version":3,"file":"static/js/5790.d4a71bca.chunk.js","mappings":"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","sources":["board/apis/apiBoard.js","board/apis/apiConfig.js","commons/components/BoardListTitle.js","board/components/skins/default/ListItems.js","board/components/skins/default/ListSearchForm.js","board/components/skins/default/Listsort.js","board/components/skins/default/List.js","board/components/skins/gallery/ListItems.js","board/components/skins/gallery/ListSearchForm.js","board/components/skins/gallery/List.js","board/components/skins/default/ListMain.js","board/containers/ListContainer.js","commons/components/LayoutBox.js","commons/components/Loading.js","commons/components/Pagination.js","layouts/Header.js","styles/color.js"],"sourcesContent":["import apiRequest from '../../commons/libs/apiRequest';\r\nimport requestData from '../../commons/libs/requestData';\r\n\r\nexport const write = (bid, form) =>\r\n  saveProcess(`/board/write/${bid}`, 'POST', form);\r\n\r\nexport const update = (seq, form) =>\r\n  saveProcess(`/board/update/${seq}`, 'PATCH', form);\r\n\r\nfunction saveProcess(url, method, form) {\r\n  return new Promise((resolve, reject) => {\r\n    (async () => {\r\n      try {\r\n        const res = await apiRequest(url, method, form);\r\n        if (res.status === 201) {\r\n          resolve(res.data.data);\r\n          return;\r\n        }\r\n\r\n        reject(res.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        reject(err);\r\n      }\r\n    })();\r\n  });\r\n}\r\n\r\n// 게시글 하나 조회\r\nexport const getInfo = (seq) => requestData(`/board/info/${seq}`);\r\n\r\n// 게시글 목록 조회\r\nexport const getList = (bid, search) => {\r\n  search = search ?? {};\r\n  let qs = Object.entries(search)\r\n    .map(([k, v]) => `${k}=${v}`)\r\n    .join('&');\r\n\r\n  qs = qs ? `?${qs}` : qs;\r\n\r\n  const url = `/board/list/${bid}${qs}`;\r\n\r\n  return requestData(url);\r\n};\r\n\r\nexport const deleteData = (seq) =>\r\n  requestData(`/board/delete/${seq}`, 'DELETE');\r\n","import requestData from '../../commons/libs/requestData';\r\n\r\n\r\n\r\n\r\nexport default function apiConfig(bid) {\r\n    return requestData(`/board/config/${bid}`);\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { color } from '../../styles/color';\r\n\r\nconst { whiteGreen } = color;\r\n\r\nconst BoardListTitle = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <BoardListTitles>\r\n      <li className=\"board-list\">\r\n        <div className=\"seq\">{t('글_번호')}</div>\r\n        <div className=\"title\">{t('제목')}</div>\r\n        <div className=\"post-info\">\r\n          <div className=\"poster\">{t('작성자')}</div>\r\n          <div className=\"view\">{t('조회수')}</div>\r\n          <div className=\"datetime\">{t('작성일')}</div>\r\n        </div>\r\n      </li>\r\n    </BoardListTitles>\r\n  );\r\n};\r\n\r\nconst BoardListTitles = styled.div`\r\n  border-bottom: 1px solid #ccc;\r\n  border-top: 3px solid #ccc;\r\n  margin-top: 20px;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.3rem;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  width: 100%;\r\n  background: ${whiteGreen};\r\n\r\n  .board-list {\r\n    display: flex;\r\n    width: 100%;\r\n\r\n    .seq {\r\n      width: 7%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n\r\n    .title {\r\n      width: 57%;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n  }\r\n\r\n  .post-info {\r\n    width: 38%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    .poster{\r\n    width: 30%;\r\n    padding-right: 20px;\r\n    }\r\n    .view {\r\n    width: 30%;\r\n    padding-right: 80px;\r\n    }\r\n    .datetime{\r\n    width: 30%;\r\n    padding-right: 70px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default React.memo(BoardListTitle);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { t } from 'i18next';\r\nimport BoardListTitle from '../../../../commons/components/BoardListTitle';\r\nimport { FcInspection } from 'react-icons/fc';\r\n\r\nconst Wrapper = styled.ul``;\r\n\r\nconst ListItem = ({ item, className }) => {\r\n  const {\r\n    seq,\r\n    notice,\r\n    subject,\r\n    poster,\r\n    member,\r\n    viewCount,\r\n    commentCount,\r\n    createdAt,\r\n  } = item;\r\n\r\n  return (\r\n    <div className=\"board-list\">\r\n      <Link to={'/board/view/' + seq} className=\"subject\">\r\n        <li className={className}>\r\n          <div className=\"seq\">{seq}</div>\r\n          <div className=\"title\">\r\n            {notice && `[${t('공지')}]`}\r\n            {subject}\r\n            {commentCount > 0 && `(${commentCount.toLocaleString()})`}\r\n          </div>\r\n          <div className=\"post-info\">\r\n            <div className=\"poster\">\r\n              {poster}\r\n              {/* {member !== null && `(${member.email})`} */}\r\n            </div>\r\n            <div className=\"view\">\r\n              {viewCount > 0 && (\r\n                <span className=\"view-count\">\r\n                  {t('조회수')}: {viewCount.toLocaleString()}\r\n                </span>\r\n              )}\r\n            </div>\r\n            <span className=\"datetime\">{createdAt}</span>\r\n          </div>\r\n        </li>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledListItem = styled(ListItem)`\r\n  display: flex;\r\n  border-bottom: 1px solid #ccc;\r\n  height: 50px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n\r\n  .seq {\r\n    width: 5%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding-left: 20px;\r\n  }\r\n\r\n  .title {\r\n    width: 60%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .post-info {\r\n    width: 35%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    .poster {\r\n      width: 25%;\r\n      height: 18px;\r\n      padding-right: 40px;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n    }\r\n    .view {\r\n      width: 25%;\r\n    }\r\n    .datetime {\r\n      width: 50%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst NoData = styled.li`\r\n  font-size: 1.3em;\r\n  height: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ListItems = ({ items }) => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <BoardListTitle />\r\n      {items && items.length > 0 ? (\r\n        items.map((item) => <StyledListItem key={item.seq} item={item} />)\r\n      ) : (\r\n        <NoData>\r\n          {t('조회된_게시글이_없습니다')}\r\n          <FcInspection />\r\n        </NoData>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListItems);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { color } from '../../../../styles/color';\r\nimport { ImSearch } from 'react-icons/im';\r\n\r\nconst { white } = color;\r\n\r\nconst FormBox = styled.form`\r\n  width: 100%;\r\n\r\n  .search {\r\n    display: flex;\r\n    gap: 5px;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    height: 70px;\r\n    border: 1px solid #ccc;\r\n    border-top: 3px solid #444;\r\n    padding: 5px 20px;\r\n    margin-top: 20px;\r\n\r\n    select {\r\n    width: 120px;\r\n    height: 40px;\r\n    padding: 0 10px;\r\n    border: 1px solid #ccc;\r\n    }\r\n\r\n    input {\r\n    width: 250px;\r\n    height: 40px;\r\n    border: 1px solid #ccc;\r\n    padding: 0 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 1.3em;\r\n  color: ${white};\r\n  width: 80px;\r\n  height: 40px;\r\n  background: #384863;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding-top: 5px;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst ListSearchForm = ({ search, onChange, onSubmit }) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <FormBox onSubmit={onSubmit} autoComplete=\"off\">\r\n      <div className=\"search\">\r\n      <select name=\"sopt\" value={search?.sopt} onChange={onChange}>\r\n        <option value=\"ALL\">{t('통합검색')}</option>\r\n        <option value=\"SUBJECT\">{t('제목')}</option>\r\n        <option value=\"CONTENT\">{t('내용')}</option>\r\n        <option value=\"SUBJECT_CONTENT\">{t('제목+내용')}</option>\r\n        <option value=\"NAME\">{t('이름')}</option>\r\n      </select>\r\n      <input\r\n        type=\"text\"\r\n        name=\"skey\"\r\n        value={search?.skey}\r\n        onChange={onChange}\r\n        placeholder={t('검색어를_입력하세요')}\r\n      />\r\n      <Button><ImSearch /></Button>\r\n      </div>\r\n    </FormBox>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListSearchForm);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  font-weight: bold;\r\n\r\n  .sort-item {\r\n    margin-right: 10px;\r\n\r\n    cursor: pointer;\r\n    border-radius: 4px;\r\n    font-size: 1.2rem;\r\n    background-color: #e0fbe2;\r\n    color: #333;\r\n    transition: background-color 0.3s, color 0.3s;\r\n  }\r\n\r\n  .sort-item:hover {\r\n    background-color: #b0ebb4;\r\n    color: #333;\r\n  }\r\n\r\n  .sort-item.active {\r\n    background-color: #b0ebb4;\r\n    color: #333;\r\n  }\r\n`;\r\n\r\nconst ListSort = ({ search, onChange }) => {\r\n  const { t } = useTranslation();\r\n\r\n  const handleSortChange = (sortValue) => {\r\n    onChange({ target: { name: 'sort', value: sortValue } });\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div\r\n        className={`sort-item ${\r\n          search?.sort === 'viewCount_DESC' ? 'active' : ''\r\n        }`}\r\n        onClick={() => handleSortChange('viewCount_DESC')}\r\n      >\r\n        {t('인기순')}\r\n      </div>\r\n      <div\r\n        className={`sort-item ${\r\n          search?.sort === 'createdAt_DESC' ? 'active' : ''\r\n        }`}\r\n        onClick={() => handleSortChange('createdAt_DESC')}\r\n      >\r\n        {t('최신순')}\r\n      </div>\r\n      <div\r\n        className={`sort-item ${\r\n          search?.sort === 'createdAt_ASC' ? 'active' : ''\r\n        }`}\r\n        onClick={() => handleSortChange('createdAt_ASC')}\r\n      >\r\n        {t('오래된순')}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListSort);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useTransition } from 'react';\r\nimport ListItems from './ListItems';\r\nimport ListSearchForm from './ListSearchForm';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Listsort from './Listsort';\r\n\r\nconst List = ({items, search, onChange, onSubmitSearch, onSubmit }) => {\r\n  const { t } = useTranslation();\r\n  // 검색항목 제출\r\n  return (\r\n    <>\r\n      <ListSearchForm search={search} onChange={onChange} onSubmit={onSubmitSearch} />\r\n      <Listsort search={search} onChange={onChange} onSubmit={onSubmit} />\r\n      <ListItems items={items} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(List);\r\n","import React from 'react';\r\n\r\nconst ListItems = () => {\r\n  return <h1>리스트</h1>;\r\n};\r\n\r\nexport default React.memo(ListItems);\r\n","import React from 'react';\r\n\r\nconst ListSearchForm = () => {\r\n  return <h1>검색양식</h1>;\r\n};\r\n\r\nexport default React.memo(ListSearchForm);","import React from 'react';\r\nimport ListItems from './ListItems';\r\nimport ListSearchForm from './ListSearchForm';\r\n\r\nconst List = ({ items, search, onSubmit }) => {\r\n  return (\r\n    <>\r\n      <ListItems items={items} />\r\n      <ListSearchForm search={search} onSubmit={onSubmit} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(List);\r\n","import React from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { color } from '../../../../styles/color';\r\n\r\nconst { white, midGreen } = color;\r\n\r\nconst ListMain = (props) => {\r\n  const navigate = useNavigate();\r\n  const { bid } = useParams();\r\n\r\n  const handleButtonClick = () => {\r\n    navigate(`/board/write/${bid}`);\r\n  };\r\n\r\n  const Wrapper = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 10px;\r\n  `;\r\n\r\n  const Button = styled.button`\r\n    font-size: 1.3em;\r\n    width: 110px;\r\n    height: 35px;\r\n    background-color: ${midGreen};\r\n    color: ${white};\r\n    border-radius: 5px;\r\n    border: none;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &:hover {\r\n      transform: scale(1.05);\r\n      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Button onClick={handleButtonClick}>글쓰기</Button>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListMain);\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useParams, useSearchParams } from 'react-router-dom';\r\nimport Loading from '../../commons/components/Loading';\r\nimport apiConfig from '../apis/apiConfig';\r\nimport { getList } from '../apis/apiBoard';\r\nimport Pagination from '../../commons/components/Pagination';\r\nimport DefaultList from '../components/skins/default/List'; // 기본 스킨\r\nimport GalleryList from '../components/skins/gallery/List'; // 갤러리 스킨\r\nimport ListMain from '../components/skins/default/ListMain';\r\n\r\nfunction getQueryString(searchParams) {\r\n  const qs = { limit: 10 };\r\n  if (searchParams.size > 0) {\r\n    for (const [k, v] of searchParams) {\r\n      qs[k] = v;\r\n    }\r\n  }\r\n  return qs;\r\n\r\n}\r\n\r\nfunction skinRoute(skin) {\r\n  switch (skin) {\r\n    case 'gallery':\r\n      return GalleryList;\r\n    default:\r\n      return DefaultList;\r\n  }\r\n}\r\n\r\nconst ListContainer = ({ setPageTitle, bid }) => {\r\n  const [searchParams] = useSearchParams();\r\n  const { bid: _bid } = useParams();\r\n  const mode = bid ? 'view' : 'list';\r\n  bid = bid ?? _bid;\r\n\r\n  const [board, setBoard] = useState(null);\r\n  const [items, setItems] = useState(null);\r\n  const [pagination, setPagination] = useState(null);\r\n  const [search, setSearch] = useState(() => getQueryString(searchParams));\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        // 게시판 설정\r\n        const res1 = await apiConfig(bid);\r\n        setBoard(res1);\r\n\r\n        setPageTitle && setPageTitle(res1.bname);\r\n\r\n        // 게시글 목록\r\n        const { items, pagination } = await getList(bid, search);\r\n        console.log('Pagination Data:', pagination);\r\n        setItems(items);\r\n        setPagination(pagination);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    })();\r\n  }, [bid, search, setPageTitle]);\r\n\r\n  const onChange = useCallback((e) => {\r\n    setSearch((search) => ({ ...search, [e.target.name]: [e.target.value] }));\r\n  }, []);\r\n\r\n  const onSubmitSearch = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setSearch({ ...search, page: 1 });\r\n    },\r\n    [search],\r\n  );\r\n\r\n  const onChangePage = useCallback((p) => {\r\n    setSearch((search) => ({ ...search, page: p })); //상태 업데이트\r\n    window.location.hash = '#root'; //페이지 스크롤 이동 처리\r\n    console.log(`Page Changed to ${p}`); //페이지 번호 확인\r\n  }, []);\r\n\r\n  if (!board || !items) {\r\n    return <Loading />;\r\n  }\r\n\r\n  const { skin } = board;\r\n  const List = skinRoute(skin);\r\n\r\n  return (\r\n    <>\r\n      <List items={items} search={search} onChange={onChange} onSubmit={onSubmitSearch} />\r\n      {mode === 'list' && <ListMain />}\r\n      <Pagination pagination={pagination} onClick={onChangePage} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ListContainer);\r\n","import styled from 'styled-components';\r\nimport { color } from '../../styles/color';\r\nexport const OuterBox = styled.div`\r\n  margin-bottom: 150px;\r\n`;\r\n\r\nexport const PageNavWrap = styled.div`\r\n  // box-sizing: border-box;\r\n  // padding: 48px 20px 20px 48px;\r\n  // border-bottom: solid 1.5px rgb(221, 221, 221);\r\n  // max-width: 1300px;\r\n  // position: relative;\r\n  // margin: 0 auto 20px;\r\n\r\n  //이 부분은 정렬을 위해 추가\r\n  box-sizing: border-box;\r\n  padding: 48px 20px 20px;\r\n  border-bottom: solid 1.5px rgb(221, 221, 221);\r\n  max-width: 1300px;\r\n  position: relative;\r\n  margin: 0 auto 20px;\r\n`;\r\n\r\nexport const PageNav = styled.div`\r\n  line-height: normal;\r\n\r\n  padding-left: 20px; //이 부분은 정렬을 위해 추가\r\n`;\r\n\r\nexport const PageTitle = styled.div`\r\n  margin-top: 20px;\r\n  font-size: 20px;\r\n\r\n  padding-left: 20px;\r\n`;\r\n\r\nexport const ContentBox = styled.div`\r\n  box-sizing: border-box;\r\n  width: 1300px;\r\n  min-height: 700px;\r\n  padding: 0 20px 50px 20px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const ContentBox2 = styled.div`\r\n  box-sizing: border-box;\r\n  width: 1300px;\r\n  min-height: 700px;\r\n  padding: 0 0 50px 0;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const ContentBox3 = styled.div`\r\n  box-sizing: border-box;\r\n  width: 800px;\r\n  min-height: 700px;\r\n  padding: 10px 0 30px 0;\r\n  margin: 0 auto;\r\n`;\r\n","import React from 'react';\r\nimport image from '../../images/loading.gif';\r\nimport image2 from '../../images/logo.png';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 100;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: auto;\r\n\r\n  .loading2 {\r\n    width: 130px;\r\n    height: 23px;\r\n    margin: 150px 0 10px 0;\r\n    opacity: 0.3;\r\n  }\r\n\r\n  img {\r\n    width: 60px;\r\n    height: 20px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Wrapper>\r\n      <img className=\"loading2\" src={image2} alt=\"loading2\" />\r\n      <img src={image} alt=\"loading\" />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(Loading);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport classNames from 'classnames';\r\nimport { color } from '../../styles/color';\r\n\r\nimport {\r\n  MdFirstPage,\r\n  MdLastPage,\r\n  MdNavigateNext,\r\n  MdNavigateBefore,\r\n} from 'react-icons/md';\r\n\r\nconst { darkGreen } = color;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  max-width: 500px;\r\n  min-width: 100px;\r\n  margin: 60px auto 0;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  .page {\r\n    min-width: 35px;\r\n    max-width: 45px;\r\n    padding: 0 5px;\r\n    height: 35px;\r\n    line-height: 33px;\r\n    text-align: center;\r\n    font-size: 1.15rem;\r\n    border: 1px solid #ada493;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n  }\r\n  .page + .page {\r\n    margin-left: 3px;\r\n  }\r\n\r\n  .page.on {\r\n    background: ${darkGreen};\r\n    color: #fff;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nconst Pagination = ({ pagination, onClick }) => {\r\n  const { page, pages, prevRangePage, nextRangePage, totalPages } = pagination;\r\n\r\n  return (\r\n    pages.length > 0 && (\r\n      <Wrapper>\r\n        {prevRangePage > 0 && (\r\n          <>\r\n            <MdFirstPage onClick={() => onClick(1)} className=\"page\" />\r\n            <MdNavigateBefore\r\n              onClick={() => onClick(Number(prevRangePage))}\r\n              className=\"page\"\r\n            />\r\n          </>\r\n        )}\r\n        {pages.map((p) => (\r\n          <div\r\n            key={'page' + p[0]}\r\n            onClick={() => onClick(Number(p[0]))}\r\n            className={'page' + classNames({ ' on': Number(p[0]) === page })}\r\n          >\r\n            {p[0]}\r\n          </div>\r\n        ))}\r\n        {nextRangePage > 0 && (\r\n          <>\r\n            <MdNavigateNext\r\n              onClick={() => onClick(Number(nextRangePage))}\r\n              className=\"page\"\r\n            />\r\n            <MdLastPage\r\n              onClick={() => onClick(Number(totalPages))}\r\n              className=\"page\"\r\n            />\r\n          </>\r\n        )}\r\n      </Wrapper>\r\n    )\r\n  );\r\n};\r\n\r\nexport default React.memo(Pagination);\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { PageNavWrap, PageTitle } from '../commons/components/LayoutBox';\r\nimport { IoMdHome } from 'react-icons/io';\r\nimport RecommendContext from '../commons/modules/CommonContext';\r\n\r\nconst HeaderBox = styled.header`\r\n  /* 헤더 스타일 */\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  font-size: 1.3em;\r\n  color: #000; /* 링크 색상 설정 */\r\n  text-decoration: none; /* 밑줄 제거 */\r\n  &:hover {\r\n    color: #007bff; /* 호버 시 색상 변경 */\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  const {\r\n    states: { linkHref, linkText },\r\n  } = useContext(RecommendContext);\r\n  /*\r\n  const location = useLocation();\r\n\r\n  // 현재 페이지 URL경로\r\n  const currentPath = location.pathname;\r\n\r\n  let linkText = '';\r\n  let linkHref = '#';\r\n  let pattern = new RegExp('/d+$');\r\n\r\n  if (currentPath === '/recommend/tour' || currentPath.concat(pattern)) {\r\n    linkText = '추천 여행지';\r\n    linkHref = '/recommend/tour';\r\n  } else if (\r\n    currentPath === '/recommend/festival' ||\r\n    currentPath.concat(pattern)\r\n  ) {\r\n    linkText = '지역별 축제 정보';\r\n    linkHref = '/recommend/festival';\r\n  } else if (currentPath === '/recommend/mylocation') {\r\n    linkText = '내 위치 주변 농촌 체험';\r\n    linkHref = '/recommend/mylocation';\r\n  } else {\r\n    linkText = 'HOME';\r\n    linkHref = '/';\r\n  }\r\n  */\r\n\r\n  return (\r\n    <HeaderBox>\r\n      <PageNavWrap>\r\n        <StyledLink href=\"/\">\r\n          <IoMdHome /> HOME\r\n        </StyledLink>\r\n        &nbsp;&nbsp; &gt; &nbsp;&nbsp;\r\n        <StyledLink href={linkHref}>{linkText}</StyledLink>\r\n        <PageTitle>\r\n          <h1>{linkText}</h1>\r\n        </PageTitle>\r\n      </PageNavWrap>\r\n    </HeaderBox>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const color = {\r\n  blue: '#6CC0FF',\r\n  primary: '#007bff',\r\n  secondary: '#6c757d',\r\n  success: '#28a745',\r\n  danger: '#dc3545',\r\n  warning: '#ffc107',\r\n  info: '#17a2b8',\r\n  light: '#E2E2E2',\r\n  dark: '#343a40',\r\n  black: '#000',\r\n  darkGreen: '#428C4C',\r\n  midGreen: '#39AE48',\r\n  lightGreen: '#C2F2B6',\r\n  white: '#ffffff',\r\n  dark_gray: '#333333',\r\n  mid_gray: '#767676',\r\n  line_gray: '#D5D5D5',\r\n  whiteGreen: '#FFFFDE',\r\n  whiteGray: '#cccccc',\r\n  gray: '#ccc',\r\n};\r\n\r\nexport const buttonColor = {\r\n  primary: [color.primary, '#fff', color.primary],\r\n  secondary: [color.secondary, '#fff', color.secondary],\r\n  success: [color.success, '#fff', color.success],\r\n  danger: [color.danger, '#fff', color.danger],\r\n  warning: [color.warning, '#212529', '#212529'],\r\n  info: [color.info, '#fff', color.info],\r\n  light: [color.light, '#212529', '#212529'],\r\n  dark: [color.dark, '#fff', color.dark],\r\n  darkGreen: [color.darkGreen, '#fff', color.darkGreen],\r\n  midGreen: [color.midGreen, '#fff', color.midGreen],\r\n  lightGreen: [color.lightGreen, '#fff', color.lightGreen],\r\n};\r\n"],"names":["write","bid","form","saveProcess","concat","update","seq","url","method","Promise","resolve","reject","res","apiRequest","status","data","err","console","error","getInfo","requestData","getList","search","_search","qs","Object","entries","map","_ref","k","v","join","deleteData","apiConfig","whiteGreen","color","BoardListTitle","t","useTranslation","_jsx","BoardListTitles","children","_jsxs","className","styled","div","_templateObject","_taggedTemplateLiteral","React","Wrapper","ul","StyledListItem","item","notice","subject","poster","member","viewCount","commentCount","createdAt","Link","to","toLocaleString","_templateObject2","NoData","li","_templateObject3","ListItems","_ref2","items","length","FcInspection","white","FormBox","Button","button","ListSearchForm","onChange","onSubmit","autoComplete","name","value","sopt","type","skey","placeholder","ImSearch","ListSort","handleSortChange","sortValue","target","sort","onClick","List","onSubmitSearch","_Fragment","Listsort","midGreen","ListMain","props","navigate","useNavigate","useParams","handleButtonClick","ListContainer","_bid2","setPageTitle","searchParams","useSearchParams","_bid","mode","board","setBoard","useState","setItems","pagination","setPagination","setSearch","limit","size","getQueryString","useEffect","res1","bname","log","useCallback","e","preventDefault","page","onChangePage","p","window","location","hash","Loading","skin","GalleryList","DefaultList","skinRoute","Pagination","OuterBox","PageNavWrap","PageTitle","_templateObject4","ContentBox","_templateObject5","ContentBox2","_templateObject6","ContentBox3","_templateObject7","src","image2","alt","image","darkGreen","pages","prevRangePage","nextRangePage","totalPages","MdFirstPage","MdNavigateBefore","Number","classNames","MdNavigateNext","MdLastPage","HeaderBox","header","StyledLink","a","Header","states","linkHref","linkText","useContext","RecommendContext","href","IoMdHome","blue","primary","secondary","success","danger","warning","info","light","dark","black","lightGreen","dark_gray","mid_gray","line_gray","whiteGray","gray","buttonColor"],"sourceRoot":""}