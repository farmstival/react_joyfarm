{"version":3,"file":"static/js/7929.6de13dd2.chunk.js","mappings":"gKAGA,MAAMA,EAAeC,IAAqB,IAApB,KAAEC,EAAI,KAAEC,GAAMF,EAClC,MACEG,SAAS,YAAEC,EAAW,YAAEC,KACtBC,EAAAA,EAAAA,YAAWC,EAAAA,IAOf,OALAC,EAAAA,EAAAA,YAAU,KACRJ,EAAYH,GACZI,EAAYH,EAAK,GAChB,CAACE,EAAaC,EAAaJ,EAAMC,KAE7BO,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,GAAK,EAGd,EAAeC,EAAAA,KAAWZ,E,6FCb1B,MAAM,UAACa,GAAaC,EAAAA,EAEPC,EAAeC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0KASzBC,EAAgBJ,EAAAA,GAAOK,KAAIC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gJAQ3BI,EAAcP,EAAAA,GAAOC,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,qRAcxBN,E,oLC7Bb,MAAM,WAAEY,GAAeX,EAAAA,EAEjBY,EAAiBV,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+eA+BfM,GAqBlB,EAjBkBxB,IAAgB,IAAf,MAAE0B,GAAO1B,EAC1B,OACES,EAAAA,EAAAA,KAACgB,EAAc,CAAAE,SACZD,EAAME,KAAKC,IACVpB,EAAAA,EAAAA,KAAA,OAAoBqB,UAAU,OAAMH,UAClCI,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,mBAAAC,OAAqBL,EAAKM,KAAMR,SAAA,EACtClB,EAAAA,EAAAA,KAAA,OAAKqB,UAAU,QAAOH,SAAEE,EAAKO,SAC7BL,EAAAA,EAAAA,MAAA,OAAKD,UAAU,UAASH,SAAA,EACtBlB,EAAAA,EAAAA,KAAC4B,EAAAA,IAAc,CAACP,UAAU,SAAS,IAAED,EAAKS,eAJtCT,EAAKM,QASF,E,cCtDd,MAAMI,EAAWC,IAAY,IAADC,EACjCD,EAAe,QAATC,EAAGD,SAAM,IAAAC,EAAAA,EAAI,CAAC,EACpB,MAAMC,EAAK,GACX,IAAK,MAAOC,EAAGC,KAAMC,OAAOC,QAAQN,GAClCE,EAAGK,KAAK,GAADb,OAAIS,EAAC,KAAAT,OAAIU,IAGlB,IAAII,EAAM,aAGV,OAFIN,EAAGO,OAAS,IAAGD,GAAG,IAAAd,OAAQQ,EAAGQ,KAAK,QAE/BC,EAAAA,EAAAA,GAAYH,EAAI,E,wBCPzB,MAAMI,EAAsBpD,IAA4B,IAA3B,kBAAEqD,GAAmBrD,EAChD,MAAOwC,EAAQc,IAAaC,EAAAA,EAAAA,UAAS,CACnCC,KAAM,GACNC,QAAS,GACTC,MAAO,OAEFC,EAAQC,IAAaL,EAAAA,EAAAA,UAAS,KAC9BM,EAAWC,IAAgBP,EAAAA,EAAAA,UAAS,IA8G3C,OA3GA/C,EAAAA,EAAAA,YAAU,KACR,MAAMuD,EAAW,IAAIC,MAAMC,KAAKC,SAASC,SAGzCC,UAAUC,YAAYC,oBAAoBC,IAKxC,MAAOC,EAAUC,GAAa,CAAC,WAAY,aAC3Cb,EAAU,CAAEc,IAAK,WAAYC,IAAK,cAElCZ,EAASa,iBAAiBH,EAAWD,GAAU,CAACK,EAAQC,KACtD,GAAIA,IAAWd,MAAMC,KAAKC,SAASa,OAAOC,GACxC,IAAK,MAAMC,KAAKJ,EACd,GAAsB,MAAlBI,EAAEC,YAAqB,CACzB5B,GAAWd,IAAM,IACZA,EAIHgB,KAAM,eAENC,QAAS,yBAEX,KACF,CAEJ,GACA,GACF,GACD,CAACH,EAAWM,KAGfpD,EAAAA,EAAAA,YAAU,KACR,WACE,IAAK,IAAD2E,EAAAC,EACF,GAAgB,QAAZD,EAAC3C,EAAOgB,YAAI,IAAA2B,IAAXA,EAAaE,OAChB,OAGF,MAAMC,QAAY/C,EAAQC,GAG1B,GAAQ,OAAH8C,QAAG,IAAHA,IAAAA,EAAK5D,OAAgC,KAApB,OAAH4D,QAAG,IAAHA,GAAU,QAAPF,EAAHE,EAAK5D,aAAK,IAAA0D,OAAP,EAAHA,EAAYnC,QAC7B,OAGF,MAAMsC,EAAaD,EAAI5D,MACpB8D,QAAQC,GAAMA,EAAEjB,UAAYiB,EAAEhB,YAC9B7C,KAAK6D,IAAC,CACLf,IAAKe,EAAEjB,SACPG,IAAKc,EAAEhB,cAGXX,EAAayB,EAGf,CAAE,MAAOG,GACPC,QAAQD,IAAIA,EACd,CACD,EA1BD,EA0BI,GACH,CAAClD,KAGJhC,EAAAA,EAAAA,YAAU,KACR,WACE,IAAK,IAADoF,EAAAC,EACF,GAAgB,QAAZD,EAACpD,EAAOgB,YAAI,IAAAoC,IAAXA,EAAaP,OAChB,OAEF,MAAMC,QAAY/C,EAAQC,GAG1B,GAAQ,OAAH8C,QAAG,IAAHA,IAAAA,EAAK5D,OAAgC,KAApB,OAAH4D,QAAG,IAAHA,GAAU,QAAPO,EAAHP,EAAK5D,aAAK,IAAAmE,OAAP,EAAHA,EAAY5C,QAC7B,OAKF,MAAMsC,EAAaD,EAAI5D,MACpB8D,QAAQC,GAAMA,EAAEjB,UAAYiB,EAAEhB,YAC9B7C,KAAK6D,IAAC,CACLf,IAAKe,EAAEjB,SACPG,IAAKc,EAAEhB,UACPtC,IAAKsD,EAAEtD,IACPC,MAAOqD,EAAErD,MACTE,QAASmD,EAAEnD,QACXwD,KAAM,CACJC,QAAQ,mEAAD7D,OAAqEuD,EAAErD,MAAK,gDAAAF,OAA+CuD,EAAErD,MAAK,MAAAF,OAAKuD,EAAEjB,SAAQ,MAAAtC,OAAKuD,EAAEhB,UAAS,8FACxKuB,WAAW,EACXC,WAAW,OAIb5C,GACFA,EAAkBkC,GAGpBzB,EAAayB,EAEf,CAAE,MAAOG,GACPC,QAAQD,IAAIA,EACd,CACD,EAtCD,EAsCI,GACH,CAAClD,EAAQa,IAEW,KAAb,OAANM,QAAM,IAANA,OAAM,EAANA,EAAQV,SAAsC,KAAb,OAATY,QAAS,IAATA,OAAS,EAATA,EAAWZ,SAC9BxC,EAAAA,EAAAA,KAACyF,EAAAA,EAAO,KAIfzF,EAAAA,EAAAA,KAAC0F,EAAAA,EAAQ,CAACxC,OAAQA,EAAQyC,OAAQvC,EAAWwC,KAAM,EAAGC,OAAQ,UAAY,EAI9E,EAAe3F,EAAAA,KAAWyC,G,oBC5H1B,MAAM,SAAEmD,EAAQ,WAAEC,EAAU,UAAEC,EAAS,SAAEC,GAAa7F,EAAAA,EAEhD8F,EAAY5F,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iCAItB0F,EAAc7F,EAAAA,GAAOC,IAAGK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,kDAKxB2F,EAAa9F,EAAAA,GAAOC,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,4dAchBwF,EAIKF,EAKHD,GAMTO,EAAqBA,KACzB,MAAOjD,EAAWC,IAAgBP,EAAAA,EAAAA,UAAS,KACrC,EAAEwD,IAAMC,EAAAA,EAAAA,MAERC,GAAwBC,EAAAA,EAAAA,cAAaC,IACzCrD,EAAaqD,EAAa,GACzB,IAEH,OACE1G,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAiB,UACEI,EAAAA,EAAAA,MAAC4E,EAAS,CAAAhF,SAAA,EACRlB,EAAAA,EAAAA,KAACmG,EAAW,CAAAjF,UACVlB,EAAAA,EAAAA,KAAC2C,EAAmB,CAACC,kBAAmB4D,OAE1ClF,EAAAA,EAAAA,MAAC8E,EAAU,CAAAlF,SAAA,EACTI,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWH,SAAA,EACxBI,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACElB,EAAAA,EAAAA,KAAC2G,EAAAA,IAAa,CAACtF,UAAU,SAAS,OAEjCiF,EAAE,yDACA,gGAGPtG,EAAAA,EAAAA,KAAC4G,EAAS,CACR3F,MAAOmC,EAAUjC,KAAK0F,IAAG,CACvBnF,IAAKmF,EAAInF,IACTC,MAAOkF,EAAIlF,MACXE,QAASgF,EAAIhF,qBAKpB,EAIP,EAAe3B,EAAAA,KAAWmG,GC3EpBS,EAAiBA,KACrB,MAAOC,EAAcC,IAAmBlE,EAAAA,EAAAA,UAAS,KAC3C,EAAEwD,IAAMC,EAAAA,EAAAA,MACd,OACEjF,EAAAA,EAAAA,MAAArB,EAAAA,SAAA,CAAAiB,SAAA,EACElB,EAAAA,EAAAA,KAACV,EAAAA,EAAY,CACXE,KAAM8G,EAAE,uDACR7G,KAAK,2BAEPO,EAAAA,EAAAA,KAACiH,EAAAA,GAAM,CAAA/F,UACLlB,EAAAA,EAAAA,KAAA,SAAAkB,SAAQ6F,OAEVzF,EAAAA,EAAAA,MAAC4F,EAAAA,GAAQ,CAAAhG,SAAA,EACPlB,EAAAA,EAAAA,KAACmH,EAAAA,EAAM,KACPnH,EAAAA,EAAAA,KAACU,EAAAA,GAAa,CAAAQ,UACZlB,EAAAA,EAAAA,KAACqG,EAAkB,WAGtB,EAIP,EAAenG,EAAAA,KAAW4G,E","sources":["commons/SubTitleLink.js","commons/components/DetailBox.js","recommend/Mylocation/components/ItemsList.js","recommend/Mylocation/apis/apiInfo.js","recommend/Mylocation/containers/MyLocationContainer.js","recommend/Mylocation/containers/MyLocListContainer.js","recommend/Mylocation/pages/Mylocation.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport CommonContext from './modules/CommonContext';\r\n\r\nconst SubTitleLink = ({ text, href }) => {\r\n  const {\r\n    actions: { setLinkText, setLinkHref },\r\n  } = useContext(CommonContext);\r\n\r\n  useEffect(() => {\r\n    setLinkText(text);\r\n    setLinkHref(href);\r\n  }, [setLinkText, setLinkHref, text, href]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default React.memo(SubTitleLink);\r\n","import styled from 'styled-components';\r\nimport { color } from '../../styles/color';\r\n\r\nconst {darkGreen} = color;\r\n\r\nexport const DetailImgBox = styled.div`\r\n  padding: 30px 30px;\r\n  border: 1px solid #d9d9d9;\r\n  margin: 30px auto;\r\n  max-width: 1200px;\r\n  border-radius: 8px;\r\n  box-shadow: 2px 2px 2px 1px #f5f5f5;\r\n`;\r\n\r\nexport const DetailImgBox2 = styled.form`\r\n  border: 2.5px solid #d9d9d9;\r\n  margin: auto;\r\n  max-width: 1300px;\r\n  border-radius: 8px;\r\n  box-shadow: 2px 2px 2px 1px #f5f5f5;\r\n`;\r\n\r\nexport const DetailTitle = styled.div`\r\n  overflow: hidden;\r\n  width: calc(100% - 170px);\r\n  font-size: 1.5rem;\r\n  padding-top: 20px;\r\n\r\n  h1 {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 0;\r\n    line-height: 1;\r\n  }\r\n\r\n  .icon {\r\n    color: ${darkGreen};\r\n  }\r\n\r\n  svg {\r\n    margin-right: 6px;\r\n  }\r\n`;\r\n","// src/components/ItemsList.js\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaMapMarkerAlt } from 'react-icons/fa';\r\nimport { color } from '../../../styles/color';\r\n\r\nconst { lightGreen } = color;\r\n\r\nconst ItemListStyled = styled.div`\r\n  margin-left: 5px;\r\n\r\n  .icon {\r\n    color: #ff5e00;\r\n  }\r\n\r\n  .item {\r\n    padding: 4px 0;\r\n    margin: 2px 2px 2px 2px;\r\n    border-bottom: 1px solid #e6e6e6;\r\n\r\n    .title {\r\n      font-size: 18px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .address {\r\n      font-size: 14px;\r\n      color: #666;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    .map-link {\r\n      margin-top: 10px;\r\n      color: blue;\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  .item:hover {\r\n    background: ${lightGreen};\r\n  }\r\n`;\r\n\r\nconst ItemsList = ({ items }) => {\r\n  return (\r\n    <ItemListStyled>\r\n      {items.map((item) => (\r\n        <div key={item.seq} className=\"item\">\r\n          <Link to={`/recommend/tour/${item.seq}`}>\r\n            <div className=\"title\">{item.title}</div>\r\n            <div className=\"address\">\r\n              <FaMapMarkerAlt className=\"icon\" /> {item.address}\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </ItemListStyled>\r\n  );\r\n};\r\n\r\nexport default ItemsList;\r\n","import requestData from \"../../../commons/libs/requestData\";\r\n\r\n// 목록 조회\r\nexport const apiList = (search) => {\r\n  search = search ?? {};\r\n  const qs = [];\r\n  for (const [k, v] of Object.entries(search)) {\r\n    qs.push(`${k}=${v}`);\r\n  }\r\n\r\n  let url = '/tour/list';\r\n  if (qs.length > 0) url += `?${qs.join('&')}`;\r\n\r\n  return requestData(url);\r\n};\r\n\r\n// 상세 조회\r\nexport const apiGet = (seq) => requestData(`/tour/info/${seq}`);","/* eslint-disable no-undef */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { apiList } from '../apis/apiInfo';\r\nimport Loading from '../../../commons/components/Loading';\r\nimport KakaoMap from '../../../map/KakaoMap';\r\n\r\nconst MyLocationContainer = ({ onLocationsUpdate }) => {\r\n  const [search, setSearch] = useState({\r\n    sido: '',\r\n    sigungu: '',\r\n    limit: 100000,\r\n  });\r\n  const [center, setCenter] = useState([]); // 지도 중심 좌표(현재 위치의 위도, 경도) - 사용자의 현재 위치 기반으로 설정\r\n  const [locations, setLocations] = useState([]); // 검색된 위치들의 위도, 경도를 저장하는 배열 -> 마커 표기할 위도, 경도 정보\r\n\r\n  /* 현재 위치의 시도, 시군구 찾기 S */\r\n  useEffect(() => {\r\n    const geocoder = new kakao.maps.services.Geocoder();\r\n    //Geocoder - 특정 좌표를 시도, 시군구 등의 행정구역 정보로 변환하는 작업\r\n\r\n    navigator.geolocation.getCurrentPosition((pos) => {\r\n      /* 현재 위치 설정\r\n      const { latitude, longitude } = pos.coords; \r\n      setCenter({ lat: latitude, lng: longitude }); */\r\n\r\n      const [latitude, longitude] = [37.7271753, 126.5122578];\r\n      setCenter({ lat: 37.7271753, lng: 126.5122578 });\r\n\r\n      geocoder.coord2RegionCode(longitude, latitude, (result, status) => {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n          for (const r of result) {\r\n            if (r.region_type === 'H') {\r\n              setSearch((search) => ({\r\n                ...search,\r\n                //sido: r.region_1depth_name,\r\n                //sigungu: r.region_2depth_name,\r\n                //sido: r.region_1depth_name, // 현재 시도로 데이터 검색\r\n                sido: '인천',\r\n                //sigungu: r.region_2depth_name, // 현재 시군구로 데이터 검색\r\n                sigungu: '강화군',\r\n              }));\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }, [setSearch, setCenter]);\r\n  /* 현재 위치의 시도, 시군구 찾기 E */\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        if (!search.sido?.trim()) {\r\n          return;\r\n        }\r\n\r\n        const res = await apiList(search);\r\n\r\n        /* 마커 표기 좌표 가공 처리 S */\r\n        if (!res?.items || res?.items?.length === 0) {\r\n          return;\r\n        }\r\n\r\n        const _locations = res.items\r\n          .filter((d) => d.latitude && d.longitude)\r\n          .map((d) => ({\r\n            lat: d.latitude,\r\n            lng: d.longitude,\r\n          }));\r\n\r\n        setLocations(_locations);\r\n\r\n        /* 마커 표기 좌표 가공 처리 E */\r\n      } catch (err) {\r\n        console.err(err);\r\n      }\r\n    })();\r\n  }, [search]);\r\n\r\n  //마커 표기\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        if (!search.sido?.trim()) {\r\n          return;\r\n        }\r\n        const res = await apiList(search);\r\n\r\n        /* 마커 표기 좌표 가공 처리 S */\r\n        if (!res?.items || res?.items?.length === 0) {\r\n          return;\r\n        }\r\n\r\n        //const url = `https://map.kakao.com/link/map/${d.latitude}, ${d.longitude}`\r\n\r\n        const _locations = res.items\r\n          .filter((d) => d.latitude && d.longitude)\r\n          .map((d) => ({\r\n            lat: d.latitude,\r\n            lng: d.longitude,\r\n            seq: d.seq,\r\n            title: d.title,\r\n            address: d.address,\r\n            info: {\r\n              content: `<div style=\"padding:8px; font-size: 1.4rem; font-weight: bold;\">${d.title}<br><a href=\"https://map.kakao.com/link/map/${d.title}, ${d.latitude}, ${d.longitude}\" target=\"_blank\" style=\"color:blue\">카카오맵 길찾기</a></div>`, // 표시할 정보\r\n              clickable: true, // 클릭 시 인포윈도우 표시\r\n              removable: true, // 인포윈도우 닫기 버튼 표시\r\n            },\r\n          }));\r\n\r\n        if (onLocationsUpdate) {\r\n          onLocationsUpdate(_locations); // 부모 컴포넌트에 위치 정보 전달\r\n        }\r\n\r\n        setLocations(_locations);\r\n        /* 마커 표기 좌표 가공 처리 E */\r\n      } catch (err) {\r\n        console.err(err);\r\n      }\r\n    })();\r\n  }, [search, onLocationsUpdate]);\r\n\r\n  if (center?.length === 0 || locations?.length === 0) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <KakaoMap center={center} marker={locations} zoom={5} height={'1000px'} />\r\n  );\r\n};\r\n\r\nexport default React.memo(MyLocationContainer);\r\n","import React, { useState, useCallback } from 'react';\r\nimport Itemslist from '../components/ItemsList';\r\nimport MyLocationContainer from './MyLocationContainer';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { GrMapLocation } from 'react-icons/gr';\r\nimport { color } from '../../../styles/color';\r\n\r\nconst { midGreen, whiteGreen, whiteGray, mid_gray } = color;\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst StyledMyLoc = styled.div`\r\n  position: relative;\r\n  z-index: 100;\r\n`;\r\n\r\nconst StyledList = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n  z-index: 500;\r\n  background-color: white;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);\r\n  border-radius: 8px;\r\n  padding: 10px;\r\n  width: 300px;\r\n  max-height: 950px;\r\n  overflow-y: auto; // 스크롤바\r\n\r\n  .icon {\r\n    color: ${mid_gray};\r\n  }\r\n\r\n  .sub_title {\r\n    background: ${whiteGreen};\r\n    margin-left: 5px;\r\n    font-size: 1.25rem;\r\n\r\n    h2 {\r\n      color: ${midGreen};\r\n      margin-bottom: 4px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MyLocListContainer = () => {\r\n  const [locations, setLocations] = useState([]);\r\n  const { t } = useTranslation();\r\n\r\n  const handleLocationsUpdate = useCallback((newLocations) => {\r\n    setLocations(newLocations);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <StyledMyLoc>\r\n          <MyLocationContainer onLocationsUpdate={handleLocationsUpdate} />\r\n        </StyledMyLoc>\r\n        <StyledList>\r\n          <div className=\"sub_title\">\r\n            <h2>\r\n              <GrMapLocation className=\"icon\" />\r\n              &nbsp;\r\n              {t('주변_여행지_리스트')}\r\n            </h2>\r\n            클릭 시, 상세페이지로 이동합니다.\r\n          </div>\r\n          <Itemslist\r\n            items={locations.map((loc) => ({\r\n              seq: loc.seq,\r\n              title: loc.title,\r\n              address: loc.address,\r\n            }))}\r\n          />\r\n        </StyledList>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(MyLocListContainer);\r\n","import React, { useState } from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { OuterBox, ContentBox } from '../../../commons/components/LayoutBox';\r\nimport SubTitleLink from '../../../commons/SubTitleLink';\r\nimport { DetailImgBox2 } from '../../../commons/components/DetailBox';\r\nimport Header from '../../../layouts/Header';\r\nimport MyLocListContainer from '../containers/MyLocListContainer';\r\n\r\nconst MylocationView = () => {\r\n  const [SubPageTitle, setSubPageTitle] = useState('');\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <SubTitleLink\r\n        text={t('내_위치_주변_여행지')}\r\n        href=\"/recommend/mylocation\"\r\n      />\r\n      <Helmet>\r\n        <title>{SubPageTitle}</title>\r\n      </Helmet>\r\n      <OuterBox>\r\n        <Header />\r\n        <DetailImgBox2>\r\n          <MyLocListContainer />\r\n        </DetailImgBox2>\r\n      </OuterBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(MylocationView);\r\n"],"names":["SubTitleLink","_ref","text","href","actions","setLinkText","setLinkHref","useContext","CommonContext","useEffect","_jsx","_Fragment","React","darkGreen","color","DetailImgBox","styled","div","_templateObject","_taggedTemplateLiteral","DetailImgBox2","form","_templateObject2","DetailTitle","_templateObject3","lightGreen","ItemListStyled","items","children","map","item","className","_jsxs","Link","to","concat","seq","title","FaMapMarkerAlt","address","apiList","search","_search","qs","k","v","Object","entries","push","url","length","join","requestData","MyLocationContainer","onLocationsUpdate","setSearch","useState","sido","sigungu","limit","center","setCenter","locations","setLocations","geocoder","kakao","maps","services","Geocoder","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","lat","lng","coord2RegionCode","result","status","Status","OK","r","region_type","_search$sido","_res$items","trim","res","_locations","filter","d","err","console","_search$sido2","_res$items2","info","content","clickable","removable","Loading","KakaoMap","marker","zoom","height","midGreen","whiteGreen","whiteGray","mid_gray","Container","StyledMyLoc","StyledList","MyLocListContainer","t","useTranslation","handleLocationsUpdate","useCallback","newLocations","GrMapLocation","Itemslist","loc","MylocationView","SubPageTitle","setSubPageTitle","Helmet","OuterBox","Header"],"sourceRoot":""}