{"version":3,"file":"static/js/2041.28409f23.chunk.js","mappings":"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","sources":["commons/components/LayoutBox.js","commons/components/Loading.js","layouts/Header.js","map/KakaoMap.js","styles/color.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport { color } from '../../styles/color';\r\nexport const OuterBox = styled.div`\r\n  margin-bottom: 150px;\r\n`;\r\n\r\nexport const PageNavWrap = styled.div`\r\n  // box-sizing: border-box;\r\n  // padding: 48px 20px 20px 48px;\r\n  // border-bottom: solid 1.5px rgb(221, 221, 221);\r\n  // max-width: 1300px;\r\n  // position: relative;\r\n  // margin: 0 auto 20px;\r\n\r\n  //이 부분은 정렬을 위해 추가\r\n  box-sizing: border-box;\r\n  padding: 48px 20px 20px;\r\n  border-bottom: solid 1.5px rgb(221, 221, 221);\r\n  max-width: 1300px;\r\n  position: relative;\r\n  margin: 0 auto 20px;\r\n`;\r\n\r\nexport const PageNav = styled.div`\r\n  line-height: normal;\r\n\r\n  padding-left: 20px; //이 부분은 정렬을 위해 추가\r\n`;\r\n\r\nexport const PageTitle = styled.div`\r\n  margin-top: 20px;\r\n  font-size: 20px;\r\n\r\n  padding-left: 20px;\r\n`;\r\n\r\nexport const ContentBox = styled.div`\r\n  box-sizing: border-box;\r\n  width: 1300px;\r\n  min-height: 700px;\r\n  padding: 0 20px 50px 20px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const ContentBox2 = styled.div`\r\n  box-sizing: border-box;\r\n  width: 1300px;\r\n  min-height: 700px;\r\n  padding: 0 0 50px 0;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const ContentBox3 = styled.div`\r\n  box-sizing: border-box;\r\n  width: 800px;\r\n  min-height: 700px;\r\n  padding: 10px 0 30px 0;\r\n  margin: 0 auto;\r\n`;\r\n","import React from 'react';\r\nimport image from '../../images/loading.gif';\r\nimport image2 from '../../images/logo.png';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 100;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: auto;\r\n\r\n  .loading2 {\r\n    width: 130px;\r\n    height: 23px;\r\n    margin: 150px 0 10px 0;\r\n    opacity: 0.3;\r\n  }\r\n\r\n  img {\r\n    width: 60px;\r\n    height: 20px;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Wrapper>\r\n      <img className=\"loading2\" src={image2} alt=\"loading2\" />\r\n      <img src={image} alt=\"loading\" />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(Loading);\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { PageNavWrap, PageTitle } from '../commons/components/LayoutBox';\r\nimport { IoMdHome } from 'react-icons/io';\r\nimport RecommendContext from '../commons/modules/CommonContext';\r\n\r\nconst HeaderBox = styled.header`\r\n  /* 헤더 스타일 */\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  font-size: 1.3em;\r\n  color: #000; /* 링크 색상 설정 */\r\n  text-decoration: none; /* 밑줄 제거 */\r\n  &:hover {\r\n    color: #007bff; /* 호버 시 색상 변경 */\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  const {\r\n    states: { linkHref, linkText },\r\n  } = useContext(RecommendContext);\r\n  /*\r\n  const location = useLocation();\r\n\r\n  // 현재 페이지 URL경로\r\n  const currentPath = location.pathname;\r\n\r\n  let linkText = '';\r\n  let linkHref = '#';\r\n  let pattern = new RegExp('/d+$');\r\n\r\n  if (currentPath === '/recommend/tour' || currentPath.concat(pattern)) {\r\n    linkText = '추천 여행지';\r\n    linkHref = '/recommend/tour';\r\n  } else if (\r\n    currentPath === '/recommend/festival' ||\r\n    currentPath.concat(pattern)\r\n  ) {\r\n    linkText = '지역별 축제 정보';\r\n    linkHref = '/recommend/festival';\r\n  } else if (currentPath === '/recommend/mylocation') {\r\n    linkText = '내 위치 주변 농촌 체험';\r\n    linkHref = '/recommend/mylocation';\r\n  } else {\r\n    linkText = 'HOME';\r\n    linkHref = '/';\r\n  }\r\n  */\r\n\r\n  return (\r\n    <HeaderBox>\r\n      <PageNavWrap>\r\n        <StyledLink href=\"/\">\r\n          <IoMdHome /> HOME\r\n        </StyledLink>\r\n        &nbsp;&nbsp; &gt; &nbsp;&nbsp;\r\n        <StyledLink href={linkHref}>{linkText}</StyledLink>\r\n        <PageTitle>\r\n          <h1>{linkText}</h1>\r\n        </PageTitle>\r\n      </PageNavWrap>\r\n    </HeaderBox>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","/* eslint-disable no-undef */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport markerG from '../images/marker_green.png';\r\n\r\nconst MapArea = styled.div`\r\n  width: ${({ width }) => width ?? '100%'};\r\n  height: ${({ height }) => height ?? '38.5rem'};\r\n`;\r\n\r\nconst KakaoMap = ({\r\n  width,\r\n  height,\r\n  center,\r\n  zoom,\r\n  marker,\r\n  markerImage,\r\n  currentLocation, // 위치 기반\r\n  address, // 주소\r\n}) => {\r\n  const [_center, setCenter] = useState(center ?? {});\r\n  const mapRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setCenter(center);\r\n  }, [center]);\r\n\r\n  /* 현재 위치 기반 S */\r\n  useEffect(() => {\r\n    if (currentLocation) {\r\n      navigator.geolocation.getCurrentPosition((pos) => {\r\n        const { latitude, longitude } = pos.coords;\r\n        setCenter({ lat: latitude, lng: longitude });\r\n      });\r\n    }\r\n  }, [currentLocation]);\r\n  // 현재 위치 기반 E\r\n\r\n  // 주소로 가운데 배치 S\r\n  useEffect(() => {\r\n    if (!address?.trim()) return;\r\n\r\n    const geocoder = new kakao.maps.services.Geocoder();\r\n\r\n    geocoder.addressSearch(address, (items, status) => {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        setCenter({ lat: items[0].y, lng: items[0].x });\r\n      }\r\n    });\r\n  }, [address]);\r\n  // 주소로 가운데 배치 E\r\n\r\n  useEffect(() => {\r\n    const mapEl = mapRef.current;\r\n    // 지도 가운데 배치 S\r\n    const position = new kakao.maps.LatLng(\r\n      _center?.lat ?? 37.579617,\r\n      _center?.lng ?? 126.977041,\r\n    );\r\n\r\n    const map = new kakao.maps.Map(mapEl, {\r\n      center: position,\r\n      level: zoom || 3,\r\n    });\r\n    // 지도 가운데 배치 E\r\n\r\n    // 마커 출력 S\r\n    if (address?.trim() && _center?.lat && _center?.lng) {\r\n      marker = { lat: _center.lat, lng: _center.lng };\r\n    }\r\n\r\n    if (marker) {\r\n      let _markers = marker;\r\n      if (!Array.isArray(marker)) _markers = [marker];\r\n\r\n      const markers = _markers.map((m) => {\r\n        const { lat, lng, image, info } = m;\r\n        const options = {\r\n          position: new kakao.maps.LatLng(lat, lng),\r\n        };\r\n\r\n        // 마커 이미지 처리 S\r\n        const mi = image ? image : markerG;\r\n\r\n        if (mi) {\r\n          const mIcon = new kakao.maps.MarkerImage(\r\n            mi,\r\n            new kakao.maps.Size(64, 69),\r\n            { offset: new kakao.maps.Point(27, 69) },\r\n          );\r\n\r\n          options.image = mIcon;\r\n        }\r\n        // 마커 이미지 처리 E\r\n\r\n        const _marker = new kakao.maps.Marker(options);\r\n\r\n        // 인포 윈도우 처리 S\r\n        if (info?.content?.trim()) {\r\n          const { content, clickable, removable } = info;\r\n\r\n          const infoWindow = new kakao.maps.InfoWindow({\r\n            content,\r\n            removable: Boolean(removable),\r\n          });\r\n\r\n          if (clickable) {\r\n            kakao.maps.event.addListener(_marker, 'click', function () {\r\n              if (_marker.isInfoWindowOpen) {\r\n                // 미노출\r\n                infoWindow.close();\r\n\r\n                _marker.isInfoWindowOpen = false;\r\n              } else {\r\n                // 노출\r\n                infoWindow.open(map, _marker);\r\n                _marker.isInfoWindowOpen = true;\r\n              }\r\n            });\r\n          } else {\r\n            infoWindow.open(map, _marker);\r\n          }\r\n        }\r\n        // 인포 윈도우 처리 E\r\n\r\n        _marker.setMap(map);\r\n\r\n        return _marker;\r\n      });\r\n    } else if (_center?.lat && _center?.lng) {\r\n      const options = {\r\n        position: new kakao.maps.LatLng(_center.lat, _center.lng),\r\n      };\r\n      const _marker = new kakao.maps.Marker(options);\r\n      _marker.setMap(map);\r\n    }\r\n    // 마커 출력 E\r\n  }, [mapRef, _center, zoom, marker, markerImage]);\r\n\r\n  return <MapArea ref={mapRef} width={width} height={height} />;\r\n};\r\n\r\nexport default React.memo(KakaoMap);\r\n","export const color = {\r\n  blue: '#6CC0FF',\r\n  primary: '#007bff',\r\n  secondary: '#6c757d',\r\n  success: '#28a745',\r\n  danger: '#dc3545',\r\n  warning: '#ffc107',\r\n  info: '#17a2b8',\r\n  light: '#E2E2E2',\r\n  dark: '#343a40',\r\n  black: '#000',\r\n  darkGreen: '#428C4C',\r\n  midGreen: '#39AE48',\r\n  lightGreen: '#C2F2B6',\r\n  white: '#ffffff',\r\n  dark_gray: '#333333',\r\n  mid_gray: '#767676',\r\n  line_gray: '#D5D5D5',\r\n  whiteGreen: '#FFFFDE',\r\n  whiteGray: '#cccccc',\r\n  gray: '#ccc',\r\n};\r\n\r\nexport const buttonColor = {\r\n  primary: [color.primary, '#fff', color.primary],\r\n  secondary: [color.secondary, '#fff', color.secondary],\r\n  success: [color.success, '#fff', color.success],\r\n  danger: [color.danger, '#fff', color.danger],\r\n  warning: [color.warning, '#212529', '#212529'],\r\n  info: [color.info, '#fff', color.info],\r\n  light: [color.light, '#212529', '#212529'],\r\n  dark: [color.dark, '#fff', color.dark],\r\n  darkGreen: [color.darkGreen, '#fff', color.darkGreen],\r\n  midGreen: [color.midGreen, '#fff', color.midGreen],\r\n  lightGreen: [color.lightGreen, '#fff', color.lightGreen],\r\n};\r\n"],"names":["OuterBox","styled","div","_templateObject","_taggedTemplateLiteral","PageNavWrap","_templateObject2","PageTitle","_templateObject3","_templateObject4","ContentBox","_templateObject5","ContentBox2","_templateObject6","ContentBox3","_templateObject7","Wrapper","Loading","_jsxs","children","_jsx","className","src","image2","alt","image","React","HeaderBox","header","StyledLink","a","Header","states","linkHref","linkText","useContext","RecommendContext","href","IoMdHome","MapArea","_ref","width","_ref2","height","KakaoMap","_ref3","center","zoom","marker","markerImage","currentLocation","address","_center","setCenter","useState","mapRef","useRef","useEffect","navigator","geolocation","getCurrentPosition","pos","latitude","longitude","coords","lat","lng","trim","kakao","maps","services","Geocoder","addressSearch","items","status","Status","OK","y","x","_center$lat","_center$lng","mapEl","current","position","LatLng","map","Map","level","_markers","Array","isArray","m","_info$content","info","options","mi","mIcon","MarkerImage","Size","offset","Point","_marker","Marker","content","clickable","removable","infoWindow","InfoWindow","Boolean","event","addListener","isInfoWindowOpen","close","open","setMap","ref","color","blue","primary","secondary","success","danger","warning","light","dark","black","darkGreen","midGreen","lightGreen","white","dark_gray","mid_gray","line_gray","whiteGreen","whiteGray","gray","buttonColor"],"sourceRoot":""}