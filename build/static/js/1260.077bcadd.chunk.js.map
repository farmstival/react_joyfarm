{"version":3,"file":"static/js/1260.077bcadd.chunk.js","mappings":"oSAuBA,MAAMA,EAAUC,EAAAA,GAAOC,KAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,srCAqErBC,EAAOC,IASN,IATO,MACZC,EAAK,KACLL,EAAI,SACJM,EAAQ,eACRC,EAAc,OACdC,EAAM,mBACNC,EAAkB,mBAClBC,EAAkB,SAClBC,GACDP,EACC,MAAOQ,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,OAC/B,UAAEG,EAAS,eAAEC,EAAc,cAAEC,GAAkBd,GAC/C,EAAEe,IAAMC,EAAAA,EAAAA,OAEZC,QAAQ,QAAEC,EAAO,QAAEC,KACjBC,EAAAA,EAAAA,YAAWC,EAAAA,KAEfC,EAAAA,EAAAA,YAAU,KACRd,GAAW,GAEJ,KACLA,GAAW,EAAM,IAElB,IAGH,MAAMe,GAAsBC,EAAAA,EAAAA,cACzBC,IACCf,EAAOgB,QAAQ,cAAe,CAAEC,OAAQF,GAAM,GAEhD,CAACf,IAGH,OACEkB,EAAAA,EAAAA,MAACnC,EAAO,CAACQ,SAAUA,EAAU4B,aAAa,MAAKC,SAAA,EAC7CF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKF,SAAEf,EAAE,yBACvBa,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CACRC,KAAK,OACLC,KAAK,SACLC,MAAW,OAAJzC,QAAI,IAAJA,OAAI,EAAJA,EAAM0C,OACb/B,SAAUA,EACV0B,UAAU,YACVM,YAAY,wDAEP,OAANnC,QAAM,IAANA,OAAM,EAANA,EAAQkC,UACPN,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACC,MAAM,SAASC,SAAUtC,EAAOkC,gBAIjC,UAAd1C,EAAK+C,OAAqBxB,GACZ,WAAdvB,EAAK+C,QAA0B,OAAJ/C,QAAI,IAAJA,GAAAA,EAAMgD,WAClCf,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKF,SAAEf,EAAE,+BACvBa,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CACRC,KAAK,WACLC,KAAK,UACLC,MAAW,OAAJzC,QAAI,IAAJA,OAAI,EAAJA,EAAMiD,QACbtC,SAAUA,EACV0B,UAAU,YACVM,YAAY,iDAEP,OAANnC,QAAM,IAANA,OAAM,EAANA,EAAQyC,WACPb,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACC,MAAM,SAASC,SAAUtC,EAAOyC,gBAKnDzB,IACCS,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKf,EAAE,yBACPgB,EAAAA,EAAAA,KAAA,MAAAD,UACEF,EAAAA,EAAAA,MAAA,SAAOiB,QAAS3C,EAAe4B,SAAA,CACxB,OAAJnC,QAAI,IAAJA,GAAAA,EAAMmD,QAASf,EAAAA,EAAAA,KAACgB,EAAAA,IAAa,KAAMhB,EAAAA,EAAAA,KAACiB,EAAAA,IAAQ,IAC5CjC,EAAE,8DAKXa,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKF,SAAEf,EAAE,mBACvBa,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACE,EAAAA,EAAS,CACRC,KAAK,OACLC,KAAK,UACLC,MAAW,OAAJzC,QAAI,IAAJA,OAAI,EAAJA,EAAMsD,QACb3C,SAAUA,EACVgC,YAAY,wDAEP,OAANnC,QAAM,IAANA,OAAM,EAANA,EAAQ8C,WACPlB,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACC,MAAM,SAASC,SAAUtC,EAAO8C,iBAIlDrB,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKF,SAAEf,EAAE,mBACvBa,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACGlB,EACCL,IACEqB,EAAAA,EAAAA,MAAAsB,EAAAA,SAAA,CAAApB,SAAA,EACEC,EAAAA,EAAAA,KAACoB,EAAAA,GAAQ,CACPzC,OAAQ0C,EAAAA,IACRC,OAAQ,CACNC,QAAS,CACPC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,IACAC,EAAAA,KAEFC,QAAS,CACP,OACA,SACA,IACA,OACA,OACA,IACA,eACA,iBAGJC,KAAU,OAAJnE,QAAI,IAAJA,OAAI,EAAJA,EAAMoE,QACZC,QAAUtD,GAAWC,EAAUD,GAC/BJ,SAAUA,CAAC2D,EAAGvD,KACZJ,EAAS,CACP4D,OAAQ,CAAE/B,KAAM,UAAWC,MAAO1B,EAAOyD,YACzC,IAGLzD,GAAUG,IACTe,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAEf,EAAE,sCACxBgB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcF,UAC3BC,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CACTC,IAAK1E,EAAK0E,IACVC,SAAS,SACTC,WAAS,EACT/B,MAAM,OACNgC,MAAM,MACNC,SAAWC,GAAUtE,EAAmBsE,EAAOhE,GAAQoB,SAEtDf,EAAE,8CAIPgB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAS,CACRD,MAAW,OAAJ/E,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,aACblC,KAAK,SACLnB,oBAAqBA,EACrBlB,mBAAoBA,WAO9B0B,EAAAA,EAAAA,KAAA,YACEI,KAAK,UACLC,MAAW,OAAJzC,QAAI,IAAJA,OAAI,EAAJA,EAAMoE,QACbzD,SAAUA,KAGP,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQ4D,WACPhC,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACC,MAAM,SAASC,SAAUtC,EAAO4D,gBAIjDjD,IACCc,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAEf,EAAE,+BACxBa,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAACqC,EAAAA,EAAU,CACTC,IAAK1E,EAAK0E,IACVC,SAAS,SACTE,MAAM,MACNhC,MAAM,OACNiC,SAAUrE,EAAmB0B,SAE5Bf,EAAE,+BAELgB,EAAAA,EAAAA,KAAC4C,EAAAA,EAAS,CACRD,MAAW,OAAJ/E,QAAI,IAAJA,OAAI,EAAJA,EAAMkF,YACbnC,KAAK,SACLrC,mBAAoBA,WAK5B0B,EAAAA,EAAAA,KAAC+C,EAAAA,GAAS,CAAC5C,KAAK,SAASM,MAAM,YAAYR,UAAU,eAAcF,SAChEf,EAAgB,WAAdpB,EAAK+C,KAAoB,2BAAS,gCAE/B,EAId,EAAeqC,EAAAA,KAAWjF,E,yIC9R1B,MAAM,IAAEkF,EAAG,OAAEC,EAAM,OAAEC,GAAWC,EAAAA,EAE1BC,GAAcC,EAAAA,EAAAA,IAAGzF,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sEAMjB,SAAEyF,EAAQ,MAAEC,GAAU/C,EAAAA,EAEfgD,EAAc9F,EAAAA,GAAO+F,OAAMC,IAAAA,GAAA7F,EAAAA,EAAAA,GAAA,sEACzBqF,EAEXE,GAEArF,IAAA,IAAC,MAAEyC,GAAOzC,EAAA,OACV4F,EAAAA,EAAYnD,KACZ6C,EAAAA,EAAAA,IAAGO,IAAAA,GAAA/F,EAAAA,EAAAA,GAAA,sFACa8F,EAAAA,EAAYnD,GAAO,GACxBmD,EAAAA,EAAYnD,GAAO,GACRmD,EAAAA,EAAYnD,GAAO,GACxC,IAEDqD,IAAA,IAAC,MAAErB,GAAOqB,EAAA,OAAKR,EAAAA,EAAAA,IAAGS,IAAAA,GAAAjG,EAAAA,EAAAA,GAAA,4BACT2E,GAAS,QAAO,IAIhBM,EAAYpF,EAAAA,GAAO+F,OAAMM,IAAAA,GAAAlG,EAAAA,EAAAA,GAAA,6DACvBoF,EAEXG,GAEAY,IAAA,IAAC,MAAExD,GAAOwD,EAAA,OACVL,EAAAA,EAAYnD,KACZ6C,EAAAA,EAAAA,IAAGY,IAAAA,GAAApG,EAAAA,EAAAA,GAAA,sFACa8F,EAAAA,EAAYnD,GAAO,GACxBmD,EAAAA,EAAYnD,GAAO,GACRmD,EAAAA,EAAYnD,GAAO,GACxC,IAGQ0D,EAAYxG,EAAAA,GAAO+F,OAAMU,IAAAA,GAAAtG,EAAAA,EAAAA,GAAA,6DACvBmF,EAEXI,GAEAgB,IAAA,IAAC,MAAE5D,GAAO4D,EAAA,OACVT,EAAAA,EAAYnD,KACZ6C,EAAAA,EAAAA,IAAGgB,IAAAA,GAAAxG,EAAAA,EAAAA,GAAA,sFACa8F,EAAAA,EAAYnD,GAAO,GACxBmD,EAAAA,EAAYnD,GAAO,GACRmD,EAAAA,EAAYnD,GAAO,GACxC,IAGQ8D,EAAc5G,EAAAA,GAAO6G,IAAGC,IAAAA,GAAA3G,EAAAA,EAAAA,GAAA,yKAE1B4G,IAAA,IAAC,MAAEjC,GAAOiC,EAAA,OAAMjC,EAAK,GAAAkC,OAAMlC,EAAK,MAAO,MAAM,IAiC3CmC,GApBajH,EAAAA,GAAO6G,IAAGK,IAAAA,GAAA/G,EAAAA,EAAAA,GAAA,iWAKdyF,EACXC,GAcgB7F,EAAAA,GAAO6G,IAAGM,IAAAA,GAAAhH,EAAAA,EAAAA,GAAA,gRAItBoF,EAKOK,G,kECtGtB,MAAMX,EAAY5E,IAKX,IALY,MACjB2E,EAAK,KACLhC,EAAI,oBACJnB,EAAmB,mBACnBlB,GACDN,EACC,OACE2E,GACAA,EAAMoC,OAAS,IACb/E,EAAAA,EAAAA,KAAA,MAAAD,SACG4C,EAAMqC,KAAIlB,IAAA,IAAC,IAAEmB,EAAG,SAAEC,EAAQ,gBAAEC,EAAe,QAAEC,GAAStB,EAAA,OACrDjE,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGqF,KAAMF,EAAgBpF,SAAEmF,IAC1BA,EACS,WAATvE,IACCX,EAAAA,EAAAA,KAACsF,EAAAA,IAAY,CAACxE,QAASA,IAAMtB,EAAoB4F,MAEnDpF,EAAAA,EAAAA,KAACuF,EAAAA,IAAa,CAACzE,QAASA,IAAMxC,EAAmB2G,OAN1CA,EAOJ,KAGV,EAIL,EAAejC,EAAAA,KAAWJ,E,gGCtB1B,MAAMP,EAAarE,IAWZ,IAXa,SAClB+B,EAAQ,IACRuC,EAAG,SACHC,EAAQ,MACR9B,EAAK,UACL+B,EAAS,OACTgD,EAAM,KACNC,EAAI,SACJ/C,EAAQ,MACRD,EAAK,SACLiD,GACD1H,EACC,MAAO2H,EAASC,IAAclH,EAAAA,EAAAA,UAAS,KAEjC,EAAEM,IAAMC,EAAAA,EAAAA,MAGR4G,GAAgBpG,EAAAA,EAAAA,cAAY,KAChC,MAAMqG,EAASC,SAASC,cAAc,SACtCF,EAAO3F,KAAO,OACd2F,EAAOG,UAAYC,QAAQV,GAC3BM,EAAOK,QAEP,MAAMC,EAAgBC,IACpB,MAAM1D,EAAQ0D,EAAElE,OAAOQ,MACvB,IACE,GAAqB,IAAjBA,EAAMoC,OACR,MAAM,IAAIuB,MAAMtH,EAAE,uDAGpB,GAAIwD,EACF,IAAK,MAAM+D,KAAQ5D,EACjB,IAAK4D,EAAKpG,KAAKqG,SAAS,UACtB,MAAM,IAAIF,MAAMtH,EAAE,mGAKxB,GAAQ,OAAHsD,QAAG,IAAHA,IAAAA,EAAKmE,OACR,MAAM,IAAIH,MAAMtH,EAAE,+CAGpB,MAAM0H,EAAW,IAAIC,SACrBD,EAASE,OAAO,MAAOtE,EAAImE,QACvBlE,GAAUmE,EAASE,OAAO,WAAYrE,GAE1C,IAAK,MAAMgE,KAAQ5D,EACjB+D,EAASE,OAAO,OAAQL,GAGtBf,GACFkB,EAASE,OAAO,SAAUV,QAAQV,IAGhChD,GACFkE,EAASE,OAAO,YAAaV,QAAQ1D,IAGnCiD,GACFiB,EAASE,OAAO,OAAQV,QAAQT,IAGlC,WACE,IACE,MAAMoB,QAAYC,EAAAA,EAAAA,GAAW,eAAgB,OAAQJ,GACrD,GAAmB,MAAfG,EAAIE,QAAkBF,EAAI9E,KAAKiF,QAMjC,YAJwB,oBAAbtE,GACTA,EAASmE,EAAI9E,KAAKA,OAMlB8E,EAAI9E,KAAK4D,SAASC,EAAWiB,EAAI9E,KAAK4D,QAC5C,CAAE,MAAOsB,GACPrB,EAAWqB,EAAItB,SACfuB,QAAQC,MAAMF,EAChB,CACD,EAjBD,EAkBF,CAAE,MAAOA,GACPrB,EAAWqB,EAAItB,QACjB,GAGFG,EAAOsB,oBAAoB,SAAUhB,GAErCN,EAAOuB,iBAAiB,SAAUjB,EAAa,GAC9C,CAACZ,EAAQlD,EAAKC,EAAUC,EAAWxD,EAAG0D,EAAU+C,IAEnD,OACE5F,EAAAA,EAAAA,MAAAsB,EAAAA,SAAA,CAAApB,SAAA,CACG2F,GACC1F,EAAAA,EAAAA,KAAA,OACEsH,IAAK5B,EACLjD,MAAOA,EACP8E,IAAI,UACJzG,QAAS+E,KAGX7F,EAAAA,EAAAA,KAACyD,EAAAA,GAAW,CACVhB,MAAOA,EACPtC,KAAK,SACLM,MAAOA,EACPK,QAAS+E,EAAc9F,SAEtBA,IAGJ4F,IAAW3F,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACC,MAAM,SAAQV,SAAE4F,MACvC,EAIP,EAAe3C,EAAAA,KAAWX,E,2DCrH1B,MAAMnC,E,QAAYvC,GAAO6J,MAAK3J,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iKAU9B,EAAekF,EAAAA,KAAW9C,E,qGCR1B,MAAM,UAAEuH,GAAcrE,EAAAA,GAChB,KAAEsE,EAAI,OAAEC,GAAWlH,EAAAA,EAEnBmH,EAAMjK,EAAAA,GAAO6G,IAAG3G,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kHAGP2J,EAEJC,GAEP1J,IAAA,IAAGyC,MAAOoH,GAAG7J,EAAA,OACb6J,IACAvE,EAAAA,EAAAA,IAAGK,IAAAA,GAAA7F,EAAAA,EAAAA,GAAA,gCACQ6J,EACV,IAGCnH,EAAasD,IAA+C,IAA9C,SAAEpD,EAAQ,MAAED,EAAK,SAAEV,EAAQ,MAAE+H,EAAQ,GAAGhE,EAE1DpD,EAAWA,GAAY,GAGnBX,GAAUW,EAASqH,KAAKhI,GAG5B,MAAM4F,EAAUjF,EAASoH,GAEzB,OAAOnC,GACL3F,EAAAA,EAAAA,KAAC4H,EAAG,CAACnH,MAAOA,EAAMV,SACf4F,IAED,IAAI,EAGV,EAAe3C,EAAAA,KAAWxC,E,kCCvC1B,MASA,EATiB,CACfwH,MAAO,UACP7E,OAAQ,OACRsE,UAAW,SACXvE,OAAQ,UACRD,IAAK,SACLgF,SAAU,O","sources":["board/components/skins/gallery/Form.js","commons/components/Buttons.js","commons/components/FileItems.js","commons/components/FileUpload.js","commons/components/InputBox2.js","commons/components/MessageBox.js","styles/fontSize.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport {\r\n  ClassicEditor,\r\n  Image,\r\n  ImageInsert,\r\n  Bold,\r\n  Essentials,\r\n  Italic,\r\n  Paragraph,\r\n} from 'ckeditor5';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport MessageBox from '../../../../commons/components/MessageBox';\r\nimport InputBox2 from '../../../../commons/components/InputBox2';\r\nimport UserInfoContext from '../../../../member/modules/UserInfoContext';\r\nimport { FaCheckSquare, FaSquare } from 'react-icons/fa';\r\nimport { MidButton } from '../../../../commons/components/Buttons';\r\nimport FileUpload from '../../../../commons/components/FileUpload';\r\nimport FileItems from '../../../../commons/components/FileItems';\r\n\r\nimport 'ckeditor5/ckeditor5.css';\r\n\r\nconst Wrapper = styled.form`\r\n\r\n  flex-direction: column;\r\n  align-items: center;\r\n  max-width: 1100px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); \r\n\r\n  .ck-editor__editable {\r\n    height: 350px;\r\n    width: 100%;\r\n    margin-bottom:15px;\r\n  }\r\n\r\n  textarea {\r\n    width: 100%;\r\n    height: 200px;\r\n    border: 1px solid #d5d5d5;\r\n    resize: none;\r\n    padding: 15px;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .input-box {\r\n    width: 180px;\r\n    padding: 10px;\r\n    margin-bottom: 15px;\r\n    border-radius: 5px;\r\n  }\r\n\r\n  .sub{\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    padding-top: 10px;\r\n    padding-bottom: 5px;\r\n    text-align: left;\r\n  }\r\n\r\n  .sub2{\r\n    font-size: 16px;\r\n    margin-bottom: 10px;\r\n    text-align: left;\r\n    width: 100%;\r\n  }\r\n\r\n  .uploadButton{\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  .submitButton {\r\n    width: 100%;\r\n    padding: 12px;\r\n    margin-top: 20px;\r\n    background-color: #2d8f2d;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n    transition: background-color 0.3s ease;\r\n    \r\n    &:hover {\r\n      background-color: #276d27;\r\n    }\r\n`;\r\n\r\nconst Form = ({\r\n  board,\r\n  form,\r\n  onSubmit,\r\n  onToggleNotice,\r\n  errors,\r\n  fileUploadCallback,\r\n  fileDeleteCallback,\r\n  onChange,\r\n}) => {\r\n  const [mounted, setMounted] = useState(false);\r\n  const [editor, setEditor] = useState(null);\r\n  const { useEditor, useUploadImage, useUploadFile } = board;\r\n  const { t } = useTranslation();\r\n  const {\r\n    states: { isLogin, isAdmin },\r\n  } = useContext(UserInfoContext);\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n\r\n    return () => {\r\n      setMounted(false);\r\n    };\r\n  }, []);\r\n\r\n  // 이미지 에디터 첨부\r\n  const insertImageCallback = useCallback(\r\n    (url) => {\r\n      editor.execute('insertImage', { source: url });\r\n    },\r\n    [editor],\r\n  );\r\n\r\n  return (\r\n    <Wrapper onSubmit={onSubmit} autoComplete=\"off\">\r\n      <dl>\r\n        <dt className=\"sub\">{t('작성자')}</dt>\r\n        <dd>\r\n          <InputBox2\r\n            type=\"text\"\r\n            name=\"poster\"\r\n            value={form?.poster}\r\n            onChange={onChange}\r\n            className=\"input-box\"\r\n            placeholder=\"이름을 입력하세요.\"\r\n          />\r\n          {errors?.poster && (\r\n            <MessageBox color=\"danger\" messages={errors.poster} />\r\n          )}\r\n        </dd>\r\n      </dl>\r\n      {((form.mode === 'write' && !isLogin) ||\r\n        (form.mode === 'update' && !form?.member)) && (\r\n        <dl>\r\n          <dt className=\"sub\">{t('비밀번호')}</dt>\r\n          <dd>\r\n            <InputBox2\r\n              type=\"password\"\r\n              name=\"guestPw\"\r\n              value={form?.guestPw}\r\n              onChange={onChange}\r\n              className=\"input-box\"\r\n              placeholder=\"비회원 비밀번호\"\r\n            />\r\n            {errors?.guestPw && (\r\n              <MessageBox color=\"danger\" messages={errors.guestPw} />\r\n            )}\r\n          </dd>\r\n        </dl>\r\n      )}\r\n      {isAdmin && (\r\n        <dl>\r\n          <dt>{t('공지글')}</dt>\r\n          <dd>\r\n            <label onClick={onToggleNotice}>\r\n              {form?.notice ? <FaCheckSquare /> : <FaSquare />}\r\n              {t('공지글로_등록하기')}\r\n            </label>\r\n          </dd>\r\n        </dl>\r\n      )}\r\n      <dl>\r\n        <dt className=\"sub\">{t('제목')}</dt>\r\n        <dd>\r\n          <InputBox2\r\n            type=\"text\"\r\n            name=\"subject\"\r\n            value={form?.subject}\r\n            onChange={onChange}\r\n            placeholder=\"제목을 입력하세요.\"\r\n          />\r\n          {errors?.subject && (\r\n            <MessageBox color=\"danger\" messages={errors.subject} />\r\n          )}\r\n        </dd>\r\n      </dl>\r\n      <dl>\r\n        <dt className=\"sub\">{t('내용')}</dt>\r\n        <dd>\r\n          {useEditor ? (\r\n            mounted && (\r\n              <>\r\n                <CKEditor\r\n                  editor={ClassicEditor}\r\n                  config={{\r\n                    plugins: [\r\n                      Bold,\r\n                      Essentials,\r\n                      Italic,\r\n                      Paragraph,\r\n                      Image,\r\n                      ImageInsert,\r\n                    ],\r\n                    toolbar: [\r\n                      'bold',\r\n                      'italic',\r\n                      '|',\r\n                      'undo',\r\n                      'redo',\r\n                      '|',\r\n                      'numberedList',\r\n                      'bulletedList',\r\n                    ],\r\n                  }}\r\n                  data={form?.content}\r\n                  onReady={(editor) => setEditor(editor)}\r\n                  onChange={(_, editor) => {\r\n                    onChange({\r\n                      target: { name: 'content', value: editor.getData() },\r\n                    });\r\n                  }}\r\n                />\r\n                {editor && useUploadImage && (\r\n                  <dl>\r\n                    <dt className=\"sub2\">{t('이미지 첨부')}</dt>\r\n                    <div className=\"uploadButton\">\r\n                      <FileUpload\r\n                        gid={form.gid}\r\n                        location=\"editor\"\r\n                        imageOnly\r\n                        color=\"dark\"\r\n                        width=\"120\"\r\n                        callback={(files) => fileUploadCallback(files, editor)}\r\n                      >\r\n                        {t('이미지_업로드')}\r\n                      </FileUpload>\r\n                    </div>\r\n\r\n                    <FileItems\r\n                      files={form?.editorImages}\r\n                      mode=\"editor\"\r\n                      insertImageCallback={insertImageCallback}\r\n                      fileDeleteCallback={fileDeleteCallback}\r\n                    />\r\n                  </dl>\r\n                )}\r\n              </>\r\n            )\r\n          ) : (\r\n            <textarea\r\n              name=\"content\"\r\n              value={form?.content}\r\n              onChange={onChange}\r\n            ></textarea>\r\n          )}\r\n          {errors?.content && (\r\n            <MessageBox color=\"danger\" messages={errors.content} />\r\n          )}\r\n        </dd>\r\n      </dl>\r\n      {useUploadFile && (\r\n        <dl>\r\n          <dt className=\"sub2\">{t('파일첨부')}</dt>\r\n          <dd>\r\n            <FileUpload\r\n              gid={form.gid}\r\n              location=\"attach\"\r\n              width=\"120\"\r\n              color=\"dark\"\r\n              callback={fileUploadCallback}\r\n            >\r\n              {t('파일선택')}\r\n            </FileUpload>\r\n            <FileItems\r\n              files={form?.attachFiles}\r\n              mode=\"attach\"\r\n              fileDeleteCallback={fileDeleteCallback}\r\n            />\r\n          </dd>\r\n        </dl>\r\n      )}\r\n      <MidButton type=\"submit\" color=\"darkGreen\" className=\"submitButton\">\r\n        {t(form.mode === 'update' ? '수정하기' : '작성하기')}\r\n      </MidButton>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(Form);\r\n","import styled, { css } from 'styled-components';\r\nimport { buttonColor } from '../../styles/color';\r\nimport fontSize from '../../styles/fontSize';\r\nimport { color } from '../../styles/color';\r\n\r\nconst { big, medium, normal } = fontSize;\r\n\r\nconst commonStyle = css`\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst { midGreen, white } = color;\r\n\r\nexport const SmallButton = styled.button`\r\n  font-size: ${normal};\r\n  height: 30px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n\r\n  ${({ width }) => css`\r\n    width: ${width && '100px'};\r\n  `}\r\n`;\r\n\r\nexport const MidButton = styled.button`\r\n  font-size: ${medium};\r\n  height: 40px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const BigButton = styled.button`\r\n  font-size: ${big};\r\n  height: 45px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  width: ${({ width }) => (width ? `${width}px` : '100%')};\r\n  margin: 20px auto;\r\n\r\n  button {\r\n    width: 0;\r\n    flex-grow: 1;\r\n  }\r\n\r\n  button + button {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport const ZzimButton = styled.div`\r\n  font-size: 1.3em;\r\n  font-weight: 700;\r\n  width: 200px;\r\n  height: 50px;\r\n  background-color: ${midGreen};\r\n  color: ${white};\r\n  border-radius: 5px;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nexport const BoardButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: ${medium};\r\n  font-weight: 600px;\r\n  cursor: pointer;\r\n  width: 100px;\r\n  height: 35px;\r\n  background-color: ${midGreen};\r\n  border-radius: 5px;\r\n  color: white;\r\n  a {\r\n    color: white;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { FaWindowClose, FaFileUpload } from 'react-icons/fa';\r\n\r\nconst FileItems = ({\r\n  files,\r\n  mode,\r\n  insertImageCallback,\r\n  fileDeleteCallback,\r\n}) => {\r\n  return (\r\n    files &&\r\n    files.length > 0 && (\r\n      <ul>\r\n        {files.map(({ seq, fileName, fileDownloadUrl, fileUrl }) => (\r\n          <li key={seq}>\r\n            <a href={fileDownloadUrl}>{fileName}</a>\r\n            {fileName}\r\n            {mode === 'editor' && (\r\n              <FaFileUpload onClick={() => insertImageCallback(fileUrl)} />\r\n            )}\r\n            <FaWindowClose onClick={() => fileDeleteCallback(seq)} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\n\r\nexport default React.memo(FileItems);\r\n","import React, { useCallback, useState } from 'react';\r\nimport apiRequest from '../libs/apiRequest';\r\nimport { SmallButton } from './Buttons';\r\nimport MessageBox from './MessageBox';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst FileUpload = ({\r\n  children,\r\n  gid,\r\n  location,\r\n  color,\r\n  imageOnly,\r\n  single,\r\n  done,\r\n  callback,\r\n  width,\r\n  imageUrl,\r\n}) => {\r\n  const [message, setMessage] = useState('');\r\n\r\n  const { t } = useTranslation();\r\n\r\n  // 버튼 클릭 처리\r\n  const onButtonClick = useCallback(() => {\r\n    const fileEl = document.createElement('input');\r\n    fileEl.type = 'file';\r\n    fileEl.multiple = !Boolean(single);\r\n    fileEl.click();\r\n\r\n    const fileListener = (e) => {\r\n      const files = e.target.files;\r\n      try {\r\n        if (files.length === 0) {\r\n          throw new Error(t('파일을_선택하세요.'));\r\n        }\r\n\r\n        if (imageOnly) {\r\n          for (const file of files) {\r\n            if (!file.type.includes('image/')) {\r\n              throw new Error(t('이미지_형식의_파일만_업로드하세요.'));\r\n            }\r\n          }\r\n        }\r\n\r\n        if (!gid?.trim()) {\r\n          throw new Error(t('필수항목(gid)_누락'));\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('gid', gid.trim());\r\n        if (location) formData.append('location', location);\r\n\r\n        for (const file of files) {\r\n          formData.append('file', file);\r\n        }\r\n\r\n        if (single) {\r\n          formData.append('single', Boolean(single));\r\n        }\r\n\r\n        if (imageOnly) {\r\n          formData.append('imageOnly', Boolean(imageOnly));\r\n        }\r\n\r\n        if (done) {\r\n          formData.append('done', Boolean(done));\r\n        }\r\n\r\n        (async () => {\r\n          try {\r\n            const res = await apiRequest('/file/upload', 'POST', formData);\r\n            if (res.status === 201 && res.data.success) {\r\n              // 파일 업로드 후속 처리\r\n              if (typeof callback === 'function') {\r\n                callback(res.data.data);\r\n              }\r\n              // 성공시 처리\r\n              return;\r\n            }\r\n\r\n            if (res.data.message) setMessage(res.data.message);\r\n          } catch (err) {\r\n            setMessage(err.message);\r\n            console.error(err);\r\n          }\r\n        })();\r\n      } catch (err) {\r\n        setMessage(err.message);\r\n      }\r\n    };\r\n\r\n    fileEl.removeEventListener('change', fileListener);\r\n\r\n    fileEl.addEventListener('change', fileListener);\r\n  }, [single, gid, location, imageOnly, t, callback, done]);\r\n\r\n  return (\r\n    <>\r\n      {imageUrl ? (\r\n        <img\r\n          src={imageUrl}\r\n          width={width}\r\n          alt=\"profile\"\r\n          onClick={onButtonClick}\r\n        />\r\n      ) : (\r\n        <SmallButton\r\n          width={width}\r\n          type=\"button\"\r\n          color={color}\r\n          onClick={onButtonClick}\r\n        >\r\n          {children}\r\n        </SmallButton>\r\n      )}\r\n      {message && <MessageBox color=\"danger\">{message}</MessageBox>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(FileUpload);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst InputBox2 = styled.input`\r\n  border: 1px solid #d5d5d5;\r\n  height: 50px;\r\n  width: 100%;\r\n  padding: 0 10px;\r\n  border-radius: 5px;\r\n  margin-bottom: 5px;\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nexport default React.memo(InputBox2);\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { color } from '../../styles/color';\r\nimport fontSize from '../../styles/fontSize';\r\n\r\nconst { normedium } = fontSize;\r\nconst { dark, danger } = color;\r\n\r\nconst Box = styled.div`\r\n  text-align: left;\r\n  padding: 10px;\r\n  font-size: ${normedium};\r\n  border-radius: 3px;\r\n  color: ${dark};\r\n\r\n  ${({ color: c }) =>\r\n    c &&\r\n    css`\r\n      color: ${danger};\r\n    `}\r\n`;\r\n\r\nconst MessageBox = ({ messages, color, children, index = 0 }) => {\r\n  // messages 배열이 정의되지 않았을 경우 빈 배열로 초기화\r\n  messages = messages || [];\r\n\r\n  // children이 있으면 messages 배열에 추가\r\n  if (children) messages.push(children);\r\n\r\n  // 인덱스를 통해 특정 메시지만 사용\r\n  const message = messages[index];\r\n\r\n  return message ? (\r\n    <Box color={color}>\r\n      {message}\r\n    </Box>\r\n  ) : null;\r\n};\r\n\r\nexport default React.memo(MessageBox);\r\n","const fontSize = {\r\n  small: '0.75rem',\r\n  normal: '1rem',\r\n  normedium: '1.2rem',\r\n  medium: '1.25rem',\r\n  big: '1.5rem',\r\n  extraBig: '2rem',\r\n};\r\n\r\nexport default fontSize;\r\n"],"names":["Wrapper","styled","form","_templateObject","_taggedTemplateLiteral","Form","_ref","board","onSubmit","onToggleNotice","errors","fileUploadCallback","fileDeleteCallback","onChange","mounted","setMounted","useState","editor","setEditor","useEditor","useUploadImage","useUploadFile","t","useTranslation","states","isLogin","isAdmin","useContext","UserInfoContext","useEffect","insertImageCallback","useCallback","url","execute","source","_jsxs","autoComplete","children","_jsx","className","InputBox2","type","name","value","poster","placeholder","MessageBox","color","messages","mode","member","guestPw","onClick","notice","FaCheckSquare","FaSquare","subject","_Fragment","CKEditor","ClassicEditor","config","plugins","Bold","Essentials","Italic","Paragraph","Image","ImageInsert","toolbar","data","content","onReady","_","target","getData","FileUpload","gid","location","imageOnly","width","callback","files","FileItems","editorImages","attachFiles","MidButton","React","big","medium","normal","fontSize","commonStyle","css","midGreen","white","SmallButton","button","_templateObject2","buttonColor","_templateObject3","_ref2","_templateObject4","_templateObject5","_ref3","_templateObject6","BigButton","_templateObject7","_ref4","_templateObject8","ButtonGroup","div","_templateObject9","_ref5","concat","BoardButton","_templateObject10","_templateObject11","length","map","seq","fileName","fileDownloadUrl","fileUrl","href","FaFileUpload","FaWindowClose","single","done","imageUrl","message","setMessage","onButtonClick","fileEl","document","createElement","multiple","Boolean","click","fileListener","e","Error","file","includes","trim","formData","FormData","append","res","apiRequest","status","success","err","console","error","removeEventListener","addEventListener","src","alt","input","normedium","dark","danger","Box","c","index","push","small","extraBig"],"sourceRoot":""}