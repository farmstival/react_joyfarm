{"version":3,"file":"static/js/3102.feb62740.chunk.js","mappings":"gKAGA,MAAMA,EAAeC,IAAqB,IAApB,KAAEC,EAAI,KAAEC,GAAMF,EAClC,MACEG,SAAS,YAAEC,EAAW,YAAEC,KACtBC,EAAAA,EAAAA,YAAWC,EAAAA,IAOf,OALAC,EAAAA,EAAAA,YAAU,KACRJ,EAAYH,GACZI,EAAYH,EAAK,GAChB,CAACE,EAAaC,EAAaJ,EAAMC,KAE7BO,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,GAAK,EAGd,EAAeC,EAAAA,KAAWZ,E,yICX1B,MAAM,IAAEa,EAAG,OAAEC,EAAM,OAAEC,GAAWC,EAAAA,EAE1BC,GAAcC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sEAMjB,SAAEC,EAAQ,MAAEC,GAAUC,EAAAA,EAEfC,EAAcC,EAAAA,GAAOC,OAAMC,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,sEACzBL,EAEXE,GAEAhB,IAAA,IAAC,MAAEsB,GAAOtB,EAAA,OACV2B,EAAAA,EAAYL,KACZL,EAAAA,EAAAA,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,sFACaQ,EAAAA,EAAYL,GAAO,GACxBK,EAAAA,EAAYL,GAAO,GACRK,EAAAA,EAAYL,GAAO,GACxC,IAEDO,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKZ,EAAAA,EAAAA,IAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,4BACTW,GAAS,QAAO,IAIhBE,EAAYR,EAAAA,GAAOC,OAAMQ,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,6DACvBN,EAEXG,GAEAkB,IAAA,IAAC,MAAEZ,GAAOY,EAAA,OACVP,EAAAA,EAAYL,KACZL,EAAAA,EAAAA,IAAGkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,sFACaQ,EAAAA,EAAYL,GAAO,GACxBK,EAAAA,EAAYL,GAAO,GACRK,EAAAA,EAAYL,GAAO,GACxC,IAGQc,EAAYZ,EAAAA,GAAOC,OAAMY,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,6DACvBP,EAEXI,GAEAsB,IAAA,IAAC,MAAEhB,GAAOgB,EAAA,OACVX,EAAAA,EAAYL,KACZL,EAAAA,EAAAA,IAAGsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,sFACaQ,EAAAA,EAAYL,GAAO,GACxBK,EAAAA,EAAYL,GAAO,GACRK,EAAAA,EAAYL,GAAO,GACxC,IAGQkB,EAAchB,EAAAA,GAAOiB,IAAGC,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,yKAE1BwB,IAAA,IAAC,MAAEb,GAAOa,EAAA,OAAMb,EAAK,GAAAc,OAAMd,EAAK,MAAO,MAAM,IAiC3Ce,GApBarB,EAAAA,GAAOiB,IAAGK,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,iWAKdC,EACXC,GAcgBG,EAAAA,GAAOiB,IAAGM,IAAAA,GAAA5B,EAAAA,EAAAA,GAAA,gRAItBN,EAKOO,G,iBCzGP,SAAS4B,EAAYC,EAASC,EAAWC,GAClDC,OAAOC,QAAQJ,GACQ,oBAAdC,GACTA,IAGsB,oBAAbC,GACTA,GAGN,C,uGCLA,MAAMG,GAAYC,EAAAA,EAAAA,KAAS,IAAM,0DAE3BC,EAAsBxD,IAAmB,IAAlB,SAAEyD,GAAUzD,EACvC,MACE0D,QAAQ,QAAEC,KACRrD,EAAAA,EAAAA,YAAWsD,EAAAA,KAERC,IAAgBC,EAAAA,EAAAA,MAKvB,OAJKH,GAAYE,EAAaE,IAAI,gBAChCF,EAAaG,OAAO,cAAeZ,OAAOa,SAAS/D,MAG9CyD,EAAUF,GAAWhD,EAAAA,EAAAA,KAAC6C,EAAS,GAAG,EAG3C,EAAe3C,EAAAA,KAAW6C,E,wDCjBnB,MAAMU,EAAWC,IAAY,IAADC,EACjCD,EAAe,QAATC,EAAGD,SAAM,IAAAC,EAAAA,EAAI,CAAC,EAEpB,MAAMC,EAAK,GAEX,IAAK,MAAOC,EAAGC,KAAMC,OAAOC,QAAQN,GAClCE,EAAGK,KAAK,GAAD9B,OAAI0B,EAAC,KAAA1B,OAAI2B,IAGlB,IAAII,EAAM,sBAGV,OAFIN,EAAGO,OAAS,IAAGD,GAAG,IAAA/B,OAAQyB,EAAGQ,KAAK,QAE/BC,EAAAA,EAAAA,GAAYH,EAAI,EAIZI,EAAUC,IAAQF,EAAAA,EAAAA,GAAY,uBAADlC,OAAwBoC,G,oKChBlE,MAAMC,EAAUzD,EAAAA,GAAOiB,IAAGvB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sGAQpB+D,EAAW1D,EAAAA,GAAOiB,IAAGf,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,+IACPnB,IAAA,IAAC,MAACmF,GAAMnF,EAAA,OAAKmF,CAAK,IAOhCC,EAAYvD,IAA0B,IAAzB,OAAEwD,EAAM,QAAEC,GAASzD,EAGpC,OAFAwD,EAASE,MAAMC,QAAQH,GAAUA,EAAS,CAACA,GAGzCA,EAAOT,OAAS,IACdnE,EAAAA,EAAAA,KAACwE,EAAO,CAACQ,UAAU,cAAahC,SAC7B4B,EAAOK,KAAKP,IACX1E,EAAAA,EAAAA,KAACyE,EAAQ,CAACC,MAAOA,EAAmBM,UAAU,aAC9CH,QAASA,IAAMA,EAAQH,IADMA,MAKlC,EAIL,EAAexE,EAAAA,KAAWyE,G,kECzB1B,MAAM,UAAEO,EAAS,IAAE/E,GAAQG,EAAAA,GACrB,QAAE6E,EAAO,OAAEC,GAAWvE,EAAAA,EAEtB2D,EAAUzD,EAAAA,GAAOiB,IAAGvB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6iCAwBPP,EAQFgF,EAWAhF,EACJiF,EASIF,GAkBXG,EAAkB9F,IAAwB,IAAvB,KAAE+F,EAAI,QAAET,GAAStF,EACxC,MAAM,EAAEgG,IAAMC,EAAAA,EAAAA,OACR,KACJC,EAAI,MACJC,EAAK,OACLC,EAAM,MACNC,EAAK,KACLC,EAAI,SACJC,EAAQ,QACRC,EAAO,OACPC,EAAM,UACNC,GACEX,EACEY,GAAaC,EAAAA,EAAAA,IAAO,IAAIC,KAAKR,GAAQ,cAQ3C,OACES,EAAAA,EAAAA,MAAC7B,EAAO,CAAAxB,SAAA,EACNqD,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,WAAUhC,SAAA,EACvBqD,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,cAAahC,SAAA,EAC1BqD,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,QAAOhC,SAAA,EACpBhD,EAAAA,EAAAA,KAACsG,EAAAA,IAAiB,CAACtB,UAAU,UAC7BhF,EAAAA,EAAAA,KAAA,KAAAgD,SAAIuC,EAAE,yCAERc,EAAAA,EAAAA,MAAA,MAAArD,SAAA,EACEhD,EAAAA,EAAAA,KAAA,MAAAgD,SAAKuC,EAAE,+BACPvF,EAAAA,EAAAA,KAAA,MAAAgD,SAAKyC,QAEPY,EAAAA,EAAAA,MAAA,MAAArD,SAAA,EACEhD,EAAAA,EAAAA,KAAA,MAAAgD,SAAKuC,EAAE,yBACPvF,EAAAA,EAAAA,KAAA,MAAAgD,SAAK0C,QAEPW,EAAAA,EAAAA,MAAA,MAAArD,SAAA,EACEhD,EAAAA,EAAAA,KAAA,MAAAgD,SAAKuC,EAAE,kDACPvF,EAAAA,EAAAA,KAAA,MAAAgD,SAzBY2C,IACE,KAAlBA,EAAOxB,OACFwB,EAAOY,QAAQ,wBAAyB,YAE1CZ,EAqBMa,CAAab,QAEnBM,GACCI,EAAAA,EAAAA,MAAA,MAAArD,SAAA,EACEhD,EAAAA,EAAAA,KAAA,MAAAgD,SAAKuC,EAAE,yBACPvF,EAAAA,EAAAA,KAAA,MAAAgD,SAAKiD,OAEL,SAGNI,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,WAAUhC,SAAA,EACvBqD,EAAAA,EAAAA,MAAA,OAAKrB,UAAU,QAAOhC,SAAA,EACpBhD,EAAAA,EAAAA,KAACyG,EAAAA,IAAe,CAACzB,UAAU,UAC3BhF,EAAAA,EAAAA,KAAA,KAAAgD,SAAIuC,EAAE,mEAERc,EAAAA,EAAAA,MAAA,MAAArD,SAAA,EACEhD,EAAAA,EAAAA,KAAA,MAAAgD,SAAKuC,EAAE,yBACPvF,EAAAA,EAAAA,KAAA,MAAAgD,SAAKkD,QAEPG,EAAAA,EAAAA,MAAA,MAAArD,SAAA,EACEhD,EAAAA,EAAAA,KAAA,MAAAgD,SAAKuC,EAAE,+BACPvF,EAAAA,EAAAA,KAAA,MAAAgD,SAAc,OAAT6C,EAAgB,eAAO,qBAE9BQ,EAAAA,EAAAA,MAAA,MAAArD,SAAA,EACEhD,EAAAA,EAAAA,KAAA,MAAAgD,SAAKuC,EAAE,+BACPc,EAAAA,EAAAA,MAAA,MAAArD,SAAA,CACG+C,EACAR,EAAE,iBAGPc,EAAAA,EAAAA,MAAA,MAAArD,SAAA,EACEhD,EAAAA,EAAAA,KAAA,MAAAgD,SAAKuC,EAAE,sCACPvF,EAAAA,EAAAA,KAAA,MAAAgD,SAAK8C,aAKC,WAAXE,GACChG,EAAAA,EAAAA,KAACuB,EAAAA,GAAS,CACRyD,UAAU,gBACVH,QAASA,IAAMA,EAAQS,EAAKf,KAC5B1D,MAAM,WAAUmC,SAEfuC,EAAE,gCAGLvF,EAAAA,EAAAA,KAAA,OAAKgF,UAAU,aAAYhC,SAAEuC,EAAE,0DAEzB,EAId,EAAerF,EAAAA,KAAWmF,G,wCClK1B,MAAMb,EAAUzD,EAAAA,GAAOiB,IAAGvB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6KAYpBgG,EAAyBnH,IAAuB,IAAtB,aAAEoH,GAAcpH,EAC9C,MAAM,EAAEgG,IAAMC,EAAAA,EAAAA,OACPF,EAAMsB,IAAWC,EAAAA,EAAAA,UAAS,OAC1BC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,CAAEG,OAAQ,QAASC,KAAM,KAEhE,IAAE1C,IAAQ2C,EAAAA,EAAAA,KAEVC,GAAWC,EAAAA,EAAAA,OAEjBrH,EAAAA,EAAAA,YAAU,KACR,WACE,IACE,MAAMsH,QAAY/C,EAAAA,EAAAA,GAAOC,GACzB+C,QAAQC,IAAI,gBAAiBF,GAG7BT,EAAQS,GAER,MACEG,UAAU,SAAEC,EAAQ,UAAEC,EAAS,YAAEC,IAC/BN,EACEO,EAAW,CAAEC,IAAKJ,EAAUK,IAAKJ,GACvCX,GAAegB,GACGN,EACZ,IAAKM,EAAKC,OAAQJ,EAAUK,OAAQL,GACpC,IAAKG,EAAKJ,YAAaA,IAI/B,CAAE,MAAOO,GACPZ,QAAQa,MAAMD,EAChB,CACD,EAtBD,EAsBI,GACH,CAAC3D,EAAKgB,IAET,MAAM6C,GAAcC,EAAAA,EAAAA,cAAaC,IAC/BhB,QAAQC,IAAI,kCAAUe,EAAS,GAC9B,IAEGzD,GAAUwD,EAAAA,EAAAA,cACb9D,KAEChC,EAAAA,EAAAA,GAAYgD,EAAE,kEAAgB,KAC5B,WACE,IACE,MAAM8B,QCpEH,SAAmB9C,GAChC,OAAO,IAAIgE,SAAQ,CAACC,EAASC,KAC3B,WACE,IACE,MAAMpB,QAAYqB,EAAAA,EAAAA,GAAW,yBAADvG,OAA0BoC,GAAO,QAC7D,GAAI8C,EAAIrB,QAAU,KAAOqB,EAAIrB,OAAS,IAEpC,YADAwC,EAAQnB,EAAIsB,KAAKA,MAInBF,EAAOpB,EAAIsB,KACb,CAAE,MAAOT,GACPO,EAAOP,EACT,CACD,EAZD,EAYI,GAER,CDoD8BU,CAAUrE,GAE5B4C,EAAS,yBAADhF,OAA0BkF,EAAI9C,KAAO,CAAEgC,SAAS,GAC1D,CAAE,MAAO2B,GACPZ,QAAQa,MAAMD,EAChB,CACD,EARD,EAQI,GACJ,GAGJ,CAACf,EAAU5B,IAGb,OAAKD,GAKHe,EAAAA,EAAAA,MAAApG,EAAAA,SAAA,CAAA+C,SAAA,EACEqD,EAAAA,EAAAA,MAAC7B,EAAO,CAAAxB,SAAA,CACLsC,EAAKuD,WACJ7I,EAAAA,EAAAA,KAAC2E,EAAS,CAACC,OAAQU,EAAKuD,UAAWhE,QAASuD,KAG5CpI,EAAAA,EAAAA,KAAC2E,EAAS,CAACK,UAAU,MAAMJ,OAAQkE,EAASjE,QAASuD,KAEvDpI,EAAAA,EAAAA,KAACqF,EAAe,CAACC,KAAMA,EAAMT,QAASA,QAExC7E,EAAAA,EAAAA,KAAA,MAAAgD,SAAKuC,EAAE,yBACPvF,EAAAA,EAAAA,KAAC+I,EAAAA,EAAQ,IAAKjC,QAfT9G,EAAAA,EAAAA,KAACgJ,EAAAA,EAAO,GAgBZ,EAIP,EAAe9I,EAAAA,KAAWwG,G,iCE3F1B,MAAMuC,EAAgBA,KACpB,MAAM,EAAE1D,IAAMC,EAAAA,EAAAA,MAEd,OACEa,EAAAA,EAAAA,MAACtD,EAAAA,EAAmB,CAAAC,SAAA,EAClBhD,EAAAA,EAAAA,KAACV,EAAAA,EAAY,CAACE,KAAM+F,EAAE,0CAAa9F,KAAK,yBACxCO,EAAAA,EAAAA,KAACkJ,EAAAA,GAAM,CAAAlG,UACLhD,EAAAA,EAAAA,KAAA,SAAAgD,SAAQuC,EAAE,+CAEZc,EAAAA,EAAAA,MAAC8C,EAAAA,GAAQ,CAAAnG,SAAA,EACPhD,EAAAA,EAAAA,KAACoJ,EAAAA,EAAM,KACPpJ,EAAAA,EAAAA,KAACqJ,EAAAA,GAAU,CAAArG,UAIThD,EAAAA,EAAAA,KAAC0G,EAAsB,WAGP,EAI1B,EAAexG,EAAAA,KAAW+I,E,kCCnC1B,MASA,EATiB,CACfK,MAAO,UACPjJ,OAAQ,OACR6E,UAAW,SACX9E,OAAQ,UACRD,IAAK,SACLoJ,SAAU,O","sources":["commons/SubTitleLink.js","commons/components/Buttons.js","commons/hooks/useConfirm.js","member/containers/MemberOnlyContainer.js","my_reservation/apis/apiInfo.js","my_reservation/components/ItemImage.js","my_reservation/components/ItemDescription.js","my_reservation/containers/MyReserveViewContainer.js","my_reservation/apis/apiCancel.js","my_reservation/pages/MyReserveView.js","styles/fontSize.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport CommonContext from './modules/CommonContext';\r\n\r\nconst SubTitleLink = ({ text, href }) => {\r\n  const {\r\n    actions: { setLinkText, setLinkHref },\r\n  } = useContext(CommonContext);\r\n\r\n  useEffect(() => {\r\n    setLinkText(text);\r\n    setLinkHref(href);\r\n  }, [setLinkText, setLinkHref, text, href]);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default React.memo(SubTitleLink);\r\n","import styled, { css } from 'styled-components';\r\nimport { buttonColor } from '../../styles/color';\r\nimport fontSize from '../../styles/fontSize';\r\nimport { color } from '../../styles/color';\r\n\r\nconst { big, medium, normal } = fontSize;\r\n\r\nconst commonStyle = css`\r\n  width: 100%;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst { midGreen, white } = color;\r\n\r\nexport const SmallButton = styled.button`\r\n  font-size: ${normal};\r\n  height: 30px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n\r\n  ${({ width }) => css`\r\n    width: ${width && '100px'};\r\n  `}\r\n`;\r\n\r\nexport const MidButton = styled.button`\r\n  font-size: ${medium};\r\n  height: 40px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const BigButton = styled.button`\r\n  font-size: ${big};\r\n  height: 45px;\r\n  ${commonStyle}\r\n\r\n  ${({ color }) =>\r\n    buttonColor[color] &&\r\n    css`\r\n      background: ${buttonColor[color][0]};\r\n      color: ${buttonColor[color][1]};\r\n      border: 1px solid ${buttonColor[color][2]};\r\n    `}\r\n`;\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  width: ${({ width }) => (width ? `${width}px` : '100%')};\r\n  margin: 20px auto;\r\n\r\n  button {\r\n    width: 0;\r\n    flex-grow: 1;\r\n  }\r\n\r\n  button + button {\r\n    margin-left: 5px;\r\n  }\r\n`;\r\n\r\nexport const ZzimButton = styled.div`\r\n  font-size: 1.3em;\r\n  font-weight: 700;\r\n  width: 200px;\r\n  height: 50px;\r\n  background-color: ${midGreen};\r\n  color: ${white};\r\n  border-radius: 5px;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    transform: scale(1.05);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nexport const BoardButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: ${medium};\r\n  font-weight: 600px;\r\n  cursor: pointer;\r\n  width: 100px;\r\n  height: 35px;\r\n  background-color: ${midGreen};\r\n  border-radius: 5px;\r\n  color: white;\r\n  a {\r\n    color: white;\r\n  }\r\n`;\r\n","export default function _useConfirm(message, onConfirm, onCancel) {\r\n  if (window.confirm(message)) {\r\n    if (typeof onConfirm === 'function') {\r\n      onConfirm();\r\n    }\r\n  } else {\r\n    if (typeof onCancel === 'function') {\r\n      onCancel();\r\n    }\r\n  }\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport UserInfoContext from '../modules/UserInfoContext';\r\nimport loadable from '@loadable/component';\r\n\r\nconst LoginPage = loadable(() => import('../pages/Login'));\r\n\r\nconst MemberOnlyContainer = ({ children }) => {\r\n  const {\r\n    states: { isLogin },\r\n  } = useContext(UserInfoContext);\r\n\r\n  const [searchParams] = useSearchParams();\r\n  if (!isLogin && !searchParams.get('redirectUrl')) {\r\n    searchParams.append('redirectUrl', window.location.href);\r\n  }\r\n\r\n  return isLogin ? children : <LoginPage />;\r\n};\r\n\r\nexport default React.memo(MemberOnlyContainer);","/* eslint-disable no-undef */\r\nimport requestData from '../../commons/libs/requestData';\r\n\r\nexport const apiList = (search) => {\r\n  search = search ?? {};\r\n\r\n  const qs = [];\r\n\r\n  for (const [k, v] of Object.entries(search)) {\r\n    qs.push(`${k}=${v}`);\r\n  }\r\n\r\n  let url = '/myreservation/list';\r\n  if (qs.length > 0) url += `?${qs.join('&')}`; //검색 조건이 있을 때\r\n\r\n  return requestData(url);\r\n};\r\n\r\n// 상세 조회\r\nexport const apiGet = (seq) => requestData(`/myreservation/info/${seq}`);\r\n\r\n// 예약된 상세조회\r\n//export const myApiGet = (seq) => requestData(`/myreservation/info/${seq}`);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\nflex-grow: 1;\r\nmargin-right: 30px;\r\nborder-radius: 5px;\r\nheight: 500px;\r\noverflow: hidden;\r\n`;\r\n\r\nconst ImageBox = styled.div`\r\n  background:url('${({image}) => image}') no-repeat center center;\r\n  background-size: contain;\r\n  width: 100%;\r\n  height: 500px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ItemImage = ({ images, onClick }) => {\r\n  images = Array.isArray(images) ? images : [images];\r\n\r\n  return (\r\n    images.length > 0 && (\r\n      <Wrapper className=\"item-images\">\r\n        {images.map((image) => (\r\n          <ImageBox image={image} key={image} className=\"item-image\"\r\n          onClick={() => onClick(image)} \r\n          />\r\n        ))}\r\n      </Wrapper>\r\n    )\r\n  );\r\n};\r\n\r\nexport default React.memo(ItemImage);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { MidButton } from '../../commons/components/Buttons';\r\nimport fontSize from '../../styles/fontSize';\r\nimport { BsPersonLinesFill } from 'react-icons/bs';\r\nimport { IoTicketOutline } from 'react-icons/io5';\r\nimport { color } from '../../styles/color';\r\nimport { format } from 'date-fns';\r\n\r\nconst { normedium, big } = fontSize;\r\nconst { primary, danger } = color;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 40%;\r\n  height: 550px;\r\n  word-break: break-all;\r\n\r\n  .dscp_box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    height: 500px;\r\n\r\n    .cancel_button {\r\n      position: absolute;\r\n    }\r\n\r\n    .person_info {\r\n      height: 50%;\r\n    }\r\n\r\n    .rsv_info {\r\n      height: 50%;\r\n    }\r\n\r\n    .title {\r\n      font-size: ${big};\r\n      font-weight: bold;\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 10px;\r\n\r\n      .icon {\r\n        margin-right: 10px;\r\n        color: ${primary};\r\n      }\r\n\r\n      p {\r\n        font-weight: bold;\r\n        margin: 5px 0;\r\n      }\r\n    }\r\n  }\r\n  .cancelment {\r\n    text-align: center;\r\n    font-size: ${big};\r\n    color: ${danger};\r\n    height: 40px;\r\n    line-height: 40px;\r\n    border: solid 1px;\r\n  }\r\n\r\n  dl {\r\n    display: flex;\r\n    padding: 10px 15px;\r\n    font-size: ${normedium};\r\n    line-height: 170%;\r\n\r\n    dt {\r\n      width: 140px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    dd {\r\n      width: calc(100% - 140px);\r\n    }\r\n  }\r\n\r\n  dl + dl {\r\n    border-top: 1px solid #a6a6a6;\r\n  }\r\n`;\r\n\r\nconst ItemDescription = ({ item, onClick }) => {\r\n  const { t } = useTranslation();\r\n  const {\r\n    name,\r\n    email,\r\n    mobile,\r\n    rdate,\r\n    ampm,\r\n    townName,\r\n    persons,\r\n    status,\r\n    deletedAt,\r\n  } = item;\r\n  const formatDate = format(new Date(rdate), 'yyyy-MM-dd');\r\n  const formatMobile = (mobile) => {\r\n    if (mobile.length === 11) {\r\n      return mobile.replace(/(\\d{3})(\\d{4})(\\d{4})/, '$1-$2-$3');\r\n    }\r\n    return mobile; // 만약 전화번호가 11자리가 아닌 경우, 원래 문자열을 그대로 반환\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"dscp_box\">\r\n        <div className=\"person_info\">\r\n          <div className=\"title\">\r\n            <BsPersonLinesFill className=\"icon\" />\r\n            <p>{t('예약자_정보')}</p>\r\n          </div>\r\n          <dl>\r\n            <dt>{t('예약자명')}</dt>\r\n            <dd>{name}</dd>\r\n          </dl>\r\n          <dl>\r\n            <dt>{t('이메일')}</dt>\r\n            <dd>{email}</dd>\r\n          </dl>\r\n          <dl>\r\n            <dt>{t('예약자_전화번호')}</dt>\r\n            <dd>{formatMobile(mobile)}</dd>\r\n          </dl>\r\n          {deletedAt ? (\r\n            <dl>\r\n              <dt>{t('취소일')}</dt>\r\n              <dd>{deletedAt}</dd>\r\n            </dl>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div className=\"rsv_info\">\r\n          <div className=\"title\">\r\n            <IoTicketOutline className=\"icon\" />\r\n            <p>{t('예약한_체험_마을_정보')}</p>\r\n          </div>\r\n          <dl>\r\n            <dt>{t('예약일')}</dt>\r\n            <dd>{formatDate}</dd>\r\n          </dl>\r\n          <dl>\r\n            <dt>{t('예약시간')}</dt>\r\n            <dd>{ampm === 'AM' ? '오전' : '오후'}</dd>\r\n          </dl>\r\n          <dl>\r\n            <dt>{t('예약인원')}</dt>\r\n            <dd>\r\n              {persons}\r\n              {t('명')}\r\n            </dd>\r\n          </dl>\r\n          <dl>\r\n            <dt>{t('체험_마을명')}</dt>\r\n            <dd>{townName}</dd>\r\n          </dl>\r\n        </div>\r\n      </div>\r\n\r\n      {status !== 'CANCEL' ? (\r\n        <MidButton\r\n          className=\"cancel_button\"\r\n          onClick={() => onClick(item.seq)}\r\n          color=\"midGreen\"\r\n        >\r\n          {t('예약_취소')}\r\n        </MidButton>\r\n      ) : (\r\n        <div className=\"cancelment\">{t('취소된 예약입니다.')}</div>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(ItemDescription);\r\n","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { apiGet } from '../apis/apiInfo';\r\nimport Loading from '../../commons/components/Loading';\r\nimport KakaoMap from '../../map/KakaoMap';\r\nimport ItemImage from '../components/ItemImage';\r\nimport ItemDescription from '../components/ItemDescription';\r\nimport styled from 'styled-components';\r\nimport { useTranslation } from 'react-i18next';\r\nimport farmImg from '../../images/farm.jpg';\r\nimport apiCancel from '../apis/apiCancel';\r\nimport _useConfirm from '../../commons/hooks/useConfirm';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  border-bottom: solid 1px #e6e6eb;\r\n  padding-bottom: 20px;\r\n  align-items: center;\r\n\r\n  .img {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst MyReserveViewContainer = ({ setPageTitle }) => {\r\n  const { t } = useTranslation();\r\n  const [item, setItem] = useState(null);\r\n  const [mapOptions, setMapOptions] = useState({ height: '600px', zoom: 3 });\r\n\r\n  const { seq } = useParams();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const res = await apiGet(seq);\r\n        console.log('Fetched data:', res); // 데이터 확인용 로그 추가\r\n        // ReserveView 변경하면서 필요없어짐(setPageTitle)\r\n        // setPageTitle(`${res.townName} ${t('예약정보')}`);\r\n        setItem(res);\r\n\r\n        const {\r\n          activity: { latitude, longitude, doroAddress },\r\n        } = res;\r\n        const position = { lat: latitude, lng: longitude };\r\n        setMapOptions((opt) => {\r\n          const options = latitude\r\n            ? { ...opt, center: position, marker: position }\r\n            : { ...opt, doroAddress: doroAddress };\r\n\r\n          return options;\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    })();\r\n  }, [seq, t]);\r\n\r\n  const onShowImage = useCallback((imageUrl) => {\r\n    console.log('이미지 주소', imageUrl);\r\n  }, []);\r\n\r\n  const onClick = useCallback(\r\n    (seq) => {\r\n      /* 예약 취소 처리 S */\r\n      _useConfirm(t('정말_취소하시겠습니까'), () => {\r\n        (async () => {\r\n          try {\r\n            const res = await apiCancel(seq);\r\n            // 예약 취소 성공시 예약 취소 페이지 이동\r\n            navigate(`/myreservation/cancel/${res.seq}`, { replace: true });\r\n          } catch (err) {\r\n            console.error(err);\r\n          }\r\n        })();\r\n      });\r\n      /* 예약 취소 처리 E */\r\n    },\r\n    [navigate, t],\r\n  );\r\n\r\n  if (!item) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        {item.townImage ? (\r\n          <ItemImage images={item.townImage} onClick={onShowImage} />\r\n        ) : (\r\n          //이미지 없는 경우 대체\r\n          <ItemImage className=\"img\" images={farmImg} onClick={onShowImage} />\r\n        )}\r\n        <ItemDescription item={item} onClick={onClick} />\r\n      </Wrapper>\r\n      <h1>{t('길찾기')}</h1>\r\n      <KakaoMap {...mapOptions} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(MyReserveViewContainer);\r\n","import apiRequest from '../../commons/libs/apiRequest';\r\n\r\nexport default function apiCancel(seq) {\r\n  return new Promise((resolve, reject) => {\r\n    (async () => {\r\n      try {\r\n        const res = await apiRequest(`/myreservation/cancel/${seq}`, 'POST');\r\n        if (res.status >= 200 || res.status < 300) {\r\n          resolve(res.data.data);\r\n          return;\r\n        }\r\n\r\n        reject(res.data);\r\n      } catch (err) {\r\n        reject(err);\r\n      }\r\n    })();\r\n  });\r\n}\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  OuterBox,\r\n  PageTitle,\r\n  ContentBox,\r\n} from '../../commons/components/LayoutBox';\r\nimport MyReserveViewContainer from '../containers/MyReserveViewContainer';\r\nimport MemberOnlyContainer from '../../member/containers/MemberOnlyContainer';\r\nimport Header from '../../layouts/Header';\r\nimport SubTitleLink from '../../commons/SubTitleLink';\r\n\r\nconst MyReserveView = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <MemberOnlyContainer>\r\n      <SubTitleLink text={t('나의_예약_현황')} href=\"/myreservation/list\" />\r\n      <Helmet>\r\n        <title>{t('나의_예약_현황')}</title>\r\n      </Helmet>\r\n      <OuterBox>\r\n        <Header />\r\n        <ContentBox>\r\n          {/* <PageTitle>\r\n            <SubTitle>{t('예약_현황_리스트')}</SubTitle>\r\n          </PageTitle> */}\r\n          <MyReserveViewContainer />\r\n        </ContentBox>\r\n      </OuterBox>\r\n    </MemberOnlyContainer>\r\n  );\r\n};\r\n\r\nexport default React.memo(MyReserveView);\r\n","const fontSize = {\r\n  small: '0.75rem',\r\n  normal: '1rem',\r\n  normedium: '1.2rem',\r\n  medium: '1.25rem',\r\n  big: '1.5rem',\r\n  extraBig: '2rem',\r\n};\r\n\r\nexport default fontSize;\r\n"],"names":["SubTitleLink","_ref","text","href","actions","setLinkText","setLinkHref","useContext","CommonContext","useEffect","_jsx","_Fragment","React","big","medium","normal","fontSize","commonStyle","css","_templateObject","_taggedTemplateLiteral","midGreen","white","color","SmallButton","styled","button","_templateObject2","buttonColor","_templateObject3","_ref2","width","_templateObject4","MidButton","_templateObject5","_ref3","_templateObject6","BigButton","_templateObject7","_ref4","_templateObject8","ButtonGroup","div","_templateObject9","_ref5","concat","BoardButton","_templateObject10","_templateObject11","_useConfirm","message","onConfirm","onCancel","window","confirm","LoginPage","loadable","MemberOnlyContainer","children","states","isLogin","UserInfoContext","searchParams","useSearchParams","get","append","location","apiList","search","_search","qs","k","v","Object","entries","push","url","length","join","requestData","apiGet","seq","Wrapper","ImageBox","image","ItemImage","images","onClick","Array","isArray","className","map","normedium","primary","danger","ItemDescription","item","t","useTranslation","name","email","mobile","rdate","ampm","townName","persons","status","deletedAt","formatDate","format","Date","_jsxs","BsPersonLinesFill","replace","formatMobile","IoTicketOutline","MyReserveViewContainer","setPageTitle","setItem","useState","mapOptions","setMapOptions","height","zoom","useParams","navigate","useNavigate","res","console","log","activity","latitude","longitude","doroAddress","position","lat","lng","opt","center","marker","err","error","onShowImage","useCallback","imageUrl","Promise","resolve","reject","apiRequest","data","apiCancel","townImage","farmImg","KakaoMap","Loading","MyReserveView","Helmet","OuterBox","Header","ContentBox","small","extraBig"],"sourceRoot":""}